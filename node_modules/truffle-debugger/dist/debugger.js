(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("Debugger", [], factory);
	else if(typeof exports === 'object')
		exports["Debugger"] = factory();
	else
		root["Debugger"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 37);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("debug");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/helpers/toConsumableArray");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/helpers/defineProperty");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/helpers/slicedToArray");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/regenerator");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/object/entries");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prefixName = prefixName;
exports.keccak256 = keccak256;

var _utils = __webpack_require__(14);

function prefixName(prefix, fn) {
  Object.defineProperty(fn, 'name', {
    value: prefix + "." + fn.name,
    configurable: true
  });

  return fn;
}

/**
 * @return 0x-prefix string of keccak256 hash
 */
function keccak256() {
  return (0, _utils.toHexString)(_utils.keccak256.apply(undefined, arguments));
}

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/object/assign");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("reselect-tree");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/helpers/extends");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("redux-saga/effects");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = __webpack_require__(9);

var _extends3 = _interopRequireDefault(_extends2);

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _reselectTree = __webpack_require__(8);

var _selectors = __webpack_require__(18);

var _selectors2 = _interopRequireDefault(_selectors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:evm:selectors");

var WORD_SIZE = 0x20;

/**
 * create EVM-level selectors for a given trace step selector
 * may specify additional selectors to include
 */
function createStepSelectors(step) {
  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var base = {
    /**
     * .trace
     *
     * trace step info related to operation
     */
    trace: (0, _reselectTree.createLeaf)([step], function (_ref) {
      var gasCost = _ref.gasCost,
          op = _ref.op,
          pc = _ref.pc;
      return { gasCost: gasCost, op: op, pc: pc };
    }),

    /**
     * .programCounter
     */
    programCounter: (0, _reselectTree.createLeaf)(["./trace"], function (step) {
      return step.pc;
    }),

    /**
     * .isJump
     */
    isJump: (0, _reselectTree.createLeaf)(["./trace"], function (step) {
      return step.op != "JUMPDEST" && step.op.indexOf("JUMP") == 0;
    }),

    /**
     * .isCall
     *
     * whether the opcode will switch to another calling context
     */
    isCall: (0, _reselectTree.createLeaf)(["./trace"], function (step) {
      return step.op == "CALL" || step.op == "DELEGATECALL";
    }),

    /**
     * .isCreate
     */
    isCreate: (0, _reselectTree.createLeaf)(["./trace"], function (step) {
      return step.op == "CREATE";
    }),

    /**
     * .isHalting
     *
     * whether the instruction halts or returns from a calling context
     */
    isHalting: (0, _reselectTree.createLeaf)(["./trace"], function (step) {
      return step.op == "STOP" || step.op == "RETURN";
    })
  };

  if (state) {
    var isRelative = function isRelative(path) {
      return typeof path == "string" && (path.startsWith("./") || path.startsWith("../"));
    };

    if (isRelative(state)) {
      state = "../" + state;
    }

    (0, _assign2.default)(base, {
      /**
       * .callAddress
       *
       * address transferred to by call operation
       */
      callAddress: (0, _reselectTree.createLeaf)(["./isCall", "./trace", state], function (matches, step, _ref2) {
        var stack = _ref2.stack;

        if (!matches) return null;

        var address = stack[stack.length - 2];
        address = "0x" + address.substring(24);
        return address;
      }),

      /**
       * .createBinary
       *
       * binary code to execute via create operation
       */
      createBinary: (0, _reselectTree.createLeaf)(["./isCreate", "./trace", state], function (matches, step, _ref3) {
        var stack = _ref3.stack,
            memory = _ref3.memory;

        if (!matches) return null;

        // Get the code that's going to be created from memory.
        // Note we multiply by 2 because these offsets are in bytes.
        var offset = parseInt(stack[stack.length - 2], 16) * 2;
        var length = parseInt(stack[stack.length - 3], 16) * 2;

        return "0x" + memory.join("").substring(offset, offset + length);
      })
    });
  }

  return base;
}

var evm = (0, _reselectTree.createSelectorTree)({
  /**
   * evm.state
   */
  state: function state(_state) {
    return _state.evm;
  },

  /**
   * evm.info
   */
  info: {
    /**
     * evm.info.contexts
     */
    contexts: (0, _reselectTree.createLeaf)(['/state'], function (state) {
      return state.info.contexts.byContext;
    }),

    /**
     * evm.info.instances
     */
    instances: (0, _reselectTree.createLeaf)(['/state'], function (state) {
      return state.info.instances.byAddress;
    }),

    /**
     * evm.info.binaries
     */
    binaries: {
      _: (0, _reselectTree.createLeaf)(['/state'], function (state) {
        return state.info.contexts.byBinary;
      }),

      /**
       * evm.info.binaries.search
       *
       * returns function (binary) => context
       */
      search: (0, _reselectTree.createLeaf)(['./_'], function (binaries) {
        // HACK ignore link references for search
        // link references come in two forms: with underscores or all zeroes
        // the underscore format is used by Truffle to reference links by name
        // zeroes are used by solc directly, as libraries inject their own
        // address at CREATE-time
        var toRegExp = function toRegExp(binary) {
          return new RegExp("^" + binary.replace(/__.{38}|0{40}/g, ".{40}"));
        };

        var matchers = (0, _entries2.default)(binaries).map(function (_ref4) {
          var _ref5 = (0, _slicedToArray3.default)(_ref4, 2),
              binary = _ref5[0],
              context = _ref5[1].context;

          return {
            context: context,
            regex: toRegExp(binary)
          };
        });

        return function (binary) {
          return matchers.filter(function (_ref6) {
            var context = _ref6.context,
                regex = _ref6.regex;
            return binary.match(regex);
          }).map(function (_ref7) {
            var context = _ref7.context;
            return { context: context };
          })[0] || null;
        };
      })
    }
  },

  /**
   * evm.current
   */
  current: {

    /**
     * evm.current.callstack
     */
    callstack: function callstack(state) {
      return state.evm.proc.callstack;
    },

    /**
     * evm.current.call
     */
    call: (0, _reselectTree.createLeaf)(["./callstack"], function (stack) {
      return stack.length ? stack[stack.length - 1] : {};
    }),

    /**
     * evm.current.context
     */
    context: (0, _reselectTree.createLeaf)(["./call", "/info/instances", "/info/binaries/search", "/info/contexts"], function (_ref8, instances, search, contexts) {
      var address = _ref8.address,
          binary = _ref8.binary;

      var record = void 0;
      if (address) {
        record = instances[address];
        binary = record.binary;
      } else {
        record = search(binary);
      }

      var context = contexts[(record || {}).context];

      return (0, _extends3.default)({}, context, {
        binary: binary
      });
    }),

    /**
     * evm.current.state
     *
     * evm state info: as of last operation, before op defined in step
     */
    state: _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)(["depth", "error", "gas", "memory", "stack", "storage"].map(function (param) {
      return (0, _defineProperty3.default)({}, param, (0, _reselectTree.createLeaf)([_selectors2.default.step], function (step) {
        return step[param];
      }));
    })))),

    /**
     * evm.current.step
     */
    step: createStepSelectors(_selectors2.default.step, "./state")
  },

  /**
   * evm.next
   */
  next: {

    /**
     * evm.next.state
     *
     * evm state as a result of next step operation
     */
    state: _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)(["depth", "error", "gas", "memory", "stack", "storage"].map(function (param) {
      return (0, _defineProperty3.default)({}, param, (0, _reselectTree.createLeaf)([_selectors2.default.next], function (step) {
        return step[param];
      }));
    })))),

    step: createStepSelectors(_selectors2.default.next, "./state")
  }
});

exports.default = evm;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getIterator2 = __webpack_require__(15);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _extends2 = __webpack_require__(9);

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _reselectTree = __webpack_require__(8);

var _truffleSolidityUtils = __webpack_require__(42);

var _truffleSolidityUtils2 = _interopRequireDefault(_truffleSolidityUtils);

var _truffleCodeUtils = __webpack_require__(43);

var _truffleCodeUtils2 = _interopRequireDefault(_truffleCodeUtils);

var _selectors = __webpack_require__(11);

var _selectors2 = _interopRequireDefault(_selectors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:solidity:selectors");

function getSourceRange() {
  var instruction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return {
    start: instruction.start || 0,
    length: instruction.length || 0,
    lines: instruction.range || {
      start: {
        line: 0, column: 0
      },
      end: {
        line: 0, column: 0
      }
    }
  };
}

var solidity = (0, _reselectTree.createSelectorTree)({
  /**
   * solidity.state
   */
  state: function state(_state) {
    return _state.solidity;
  },

  /**
   * solidity.info
   */
  info: {
    /**
     * solidity.info.sources
     */
    sources: (0, _reselectTree.createLeaf)(['/state'], function (state) {
      return state.info.sources.byId;
    }),

    /**
     * solidity.info.sourceMaps
     */
    sourceMaps: (0, _reselectTree.createLeaf)(['/state'], function (state) {
      return state.info.sourceMaps.byContext;
    })
  },

  /**
   * solidity.current
   */
  current: {

    /**
     * solidity.current.sourceMap
     */
    sourceMap: (0, _reselectTree.createLeaf)([_selectors2.default.current.context, "/info/sourceMaps"], function (_ref, sourceMaps) {
      var context = _ref.context;
      return sourceMaps[context] || {};
    }),

    /**
     * solidity.current.functionDepth
     */
    functionDepth: function functionDepth(state) {
      return state.solidity.proc.functionDepth;
    },

    /**
     * solidity.current.instructions
     */
    instructions: (0, _reselectTree.createLeaf)(["/info/sources", _selectors2.default.current.context, "./sourceMap"], function (sources, _ref2, _ref3) {
      var binary = _ref2.binary;
      var sourceMap = _ref3.sourceMap;

      var instructions = _truffleCodeUtils2.default.parseCode(binary);

      if (!sourceMap) {
        // Let's create a source map to use since none exists. This source map
        // maps just as many ranges as there are instructions, and ensures every
        // instruction is marked as "jumping out". This will ensure all
        // available debugger commands step one instruction at a time.
        //
        // This is kindof a hack; perhaps this should be broken out into separate
        // context types. TODO
        sourceMap = "";
        for (var i = 0; i < instructions.length; i++) {
          sourceMap += i + ":" + i + ":1:-1;";
        }
      }

      var lineAndColumnMappings = _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(sources).map(function (_ref4) {
        var _ref5 = (0, _slicedToArray3.default)(_ref4, 2),
            id = _ref5[0],
            source = _ref5[1].source;

        return (0, _defineProperty3.default)({}, id, _truffleSolidityUtils2.default.getCharacterOffsetToLineAndColumnMapping(source || ""));
      }))));
      var humanReadableSourceMap = _truffleSolidityUtils2.default.getHumanReadableSourceMap(sourceMap);

      var primaryFile = humanReadableSourceMap[0].file;
      debug("primaryFile %o", primaryFile);

      return instructions.map(function (instruction, index) {
        // lookup source map by index and add `index` property to
        // instruction
        //

        var sourceMap = humanReadableSourceMap[index] || {};

        return {
          instruction: (0, _extends3.default)({}, instruction, { index: index }),
          sourceMap: sourceMap
        };
      }).map(function (_ref7) {
        var instruction = _ref7.instruction,
            sourceMap = _ref7.sourceMap;

        // add source map information to instruction, or defaults
        //

        var jump = sourceMap.jump,
            _sourceMap$start = sourceMap.start,
            start = _sourceMap$start === undefined ? 0 : _sourceMap$start,
            _sourceMap$length = sourceMap.length,
            length = _sourceMap$length === undefined ? 0 : _sourceMap$length,
            _sourceMap$file = sourceMap.file,
            file = _sourceMap$file === undefined ? primaryFile : _sourceMap$file;

        var lineAndColumnMapping = lineAndColumnMappings[file] || {};
        var range = {
          start: lineAndColumnMapping[start] || { line: null, column: null },
          end: lineAndColumnMapping[start + length] || { line: null, column: null }
        };

        if (range.start.line === null) {
          debug("sourceMap %o", sourceMap);
        }

        return (0, _extends3.default)({}, instruction, {

          jump: jump,
          start: start,
          length: length,
          file: file,
          range: range
        });
      });
    }),

    /**
     * solidity.current.instructionAtProgramCounter
     */
    instructionAtProgramCounter: (0, _reselectTree.createLeaf)(["./instructions"], function (instructions) {
      var map = [];
      instructions.forEach(function (instruction) {
        map[instruction.pc] = instruction;
      });

      // fill in gaps in map by defaulting to the last known instruction
      var lastSeen = null;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = (0, _getIterator3.default)(map.entries()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _ref8 = _step.value;

          var _ref9 = (0, _slicedToArray3.default)(_ref8, 2);

          var pc = _ref9[0];
          var instruction = _ref9[1];

          if (instruction) {
            lastSeen = instruction;
          } else {
            map[pc] = lastSeen;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return map;
    }),

    /**
     * solidity.current.instruction
     */
    instruction: (0, _reselectTree.createLeaf)(["./instructionAtProgramCounter", _selectors2.default.current.step.programCounter], function (map, pc) {
      return map[pc] || {};
    }),

    /**
     * solidity.current.source
     */
    source: (0, _reselectTree.createLeaf)(["/info/sources", "./instruction"], function (sources, _ref10) {
      var id = _ref10.file;
      return sources[id] || {};
    }),

    /**
     * solidity.current.sourceRange
     */
    sourceRange: (0, _reselectTree.createLeaf)(["./instruction"], getSourceRange),

    /**
     * solidity.current.isSourceRangeFinal
     */
    isSourceRangeFinal: (0, _reselectTree.createLeaf)(["./instructionAtProgramCounter", _selectors2.default.current.step.programCounter, _selectors2.default.next.step.programCounter], function (map, current, next) {
      if (!map[next]) {
        return true;
      }

      current = map[current];
      next = map[next];

      return current.start != next.start || current.length != next.length || current.file != next.file;
    }),

    /**
     * solidity.current.isMultiline
     */
    isMultiline: (0, _reselectTree.createLeaf)(["./sourceRange"], function (_ref11) {
      var lines = _ref11.lines;
      return lines.start.line != lines.end.line;
    }),

    /**
     * solidity.current.willJump
     */
    willJump: (0, _reselectTree.createLeaf)([_selectors2.default.current.step.isJump], function (isJump) {
      return isJump;
    }),

    /**
     * solidity.current.jumpDirection
     */
    jumpDirection: (0, _reselectTree.createLeaf)(["./instruction"], function () {
      var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return i.jump || "-";
    })
  }
});

exports.default = solidity;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("redux");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MAX_WORD = exports.WORD_SIZE = undefined;

var _getIterator2 = __webpack_require__(15);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _typeof2 = __webpack_require__(27);

var _typeof3 = _interopRequireDefault(_typeof2);

exports.cleanBigNumbers = cleanBigNumbers;
exports.typeIdentifier = typeIdentifier;
exports.typeClass = typeClass;
exports.allocateDeclarations = allocateDeclarations;
exports.specifiedSize = specifiedSize;
exports.storageSize = storageSize;
exports.isReference = isReference;
exports.referenceType = referenceType;
exports.baseDefinition = baseDefinition;
exports.toBigNumber = toBigNumber;
exports.toSignedBigNumber = toSignedBigNumber;
exports.toHexString = toHexString;
exports.toBytes = toBytes;
exports.keccak256 = keccak256;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _bignumber = __webpack_require__(19);

var _web = __webpack_require__(30);

var _web2 = _interopRequireDefault(_web);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:data:decode:utils");

var WORD_SIZE = exports.WORD_SIZE = 0x20;
var MAX_WORD = exports.MAX_WORD = new _bignumber.BigNumber(2).pow(256).minus(1);

/**
 * recursively converts big numbers into something nicer to look at
 */
function cleanBigNumbers(value) {
  if (_bignumber.BigNumber.isBigNumber(value)) {
    return value.toNumber();
  } else if (value && value.map != undefined) {
    return value.map(function (inner) {
      return cleanBigNumbers(inner);
    });
  } else if (value && (typeof value === "undefined" ? "undefined" : (0, _typeof3.default)(value)) == "object") {
    return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(value).map(function (_ref) {
      var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
          key = _ref2[0],
          inner = _ref2[1];

      return (0, _defineProperty3.default)({}, key, cleanBigNumbers(inner));
    }))));
  } else {
    return value;
  }
}

function typeIdentifier(definition) {
  return definition.typeDescriptions.typeIdentifier;
}

/**
 * returns basic type class for a variable definition node
 * e.g.:
 *  `t_uint256` becomes `uint`
 *  `t_struct$_Thing_$20_memory_ptr` becomes `struct`
 */
function typeClass(definition) {
  return typeIdentifier(definition).match(/t_([^$_0-9]+)/)[1];
}

/**
 * Allocate storage for given variable declarations
 *
 * Postcondition: starts a new slot and occupies whole slots
 */
function allocateDeclarations(declarations, refs) {
  var slot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : WORD_SIZE - 1;
  var path = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];

  if (index < WORD_SIZE - 1) {
    // starts a new slot
    slot++;
    index = WORD_SIZE - 1;
  }

  var parentFrom = { slot: slot, index: 0 };
  var parentTo = { slot: slot, index: WORD_SIZE - 1 };
  var mapping = {};

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3.default)(declarations), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var declaration = _step.value;

      var _allocateDeclaration = allocateDeclaration(declaration, refs, slot, index),
          from = _allocateDeclaration.from,
          to = _allocateDeclaration.to,
          next = _allocateDeclaration.next,
          children = _allocateDeclaration.children;

      mapping[declaration.id] = { from: from, to: to, name: declaration.name };
      if (children !== undefined) {
        mapping[declaration.id].children = children;
      }

      slot = next.slot;
      index = next.index;

      parentTo = { slot: to.slot, index: WORD_SIZE - 1 };
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (index < WORD_SIZE - 1) {
    slot++;
    index = WORD_SIZE - 1;
  }

  return {
    from: parentFrom,
    to: parentTo,
    next: { slot: slot, index: index },
    children: mapping
  };
}

function allocateValue(slot, index, bytes) {
  var from = index - bytes + 1 >= 0 ? { slot: slot, index: index - bytes + 1 } : { slot: slot + 1, index: WORD_SIZE - bytes };

  var to = { slot: from.slot, index: from.index + bytes - 1 };

  var next = from.index == 0 ? { slot: from.slot + 1, index: WORD_SIZE - 1 } : { slot: from.slot, index: from.index - 1 };

  return { from: from, to: to, next: next };
}

function allocateDeclaration(declaration, refs, slot, index) {
  var definition = refs[declaration.id].definition;
  var byteSize = storageSize(definition); // yum

  if (typeClass(definition) != "struct") {
    return allocateValue(slot, index, byteSize);
  }

  var struct = refs[definition.typeName.referencedDeclaration];
  debug("struct: %O", struct);

  var result = allocateDeclarations(struct.variables || [], refs, slot, index);
  debug("struct result %o", result);
  return result;
}

/**
 * e.g. uint48 -> 6
 * @return size in bytes for explicit type size, or `null` if not stated
 */
function specifiedSize(definition) {
  var specified = typeIdentifier(definition).match(/t_[a-z]+([0-9]+)/);

  if (!specified) {
    return null;
  }

  var num = specified[1];

  switch (typeClass(definition)) {
    case "int":
    case "uint":
      return num / 8;

    case "bytes":
      return num;

    default:
      debug("Unknown type for size specification: %s", typeIdentifier(definition));
  }
}

function storageSize(definition) {
  switch (typeClass(definition)) {
    case "bool":
      return 1;

    case "address":
      return 20;

    case "int":
    case "uint":
      // is this a HACK? ("256" / 8)
      return typeIdentifier(definition).match(/t_[a-z]+([0-9]+)/)[1] / 8;

    case "string":
    case "bytes":
    case "array":
      return WORD_SIZE;
  }
}

function isReference(definition) {
  return typeIdentifier(definition).match(/_(memory|storage)(_ptr)?$/) != null;
}

function referenceType(definition) {
  return typeIdentifier(definition).match(/_([^_]+)(_ptr)?$/)[1];
}

function baseDefinition(definition) {
  var baseIdentifier = typeIdentifier(definition)
  // first dollar sign     last dollar sign
  //   `---------.       ,---'
  .match(/^[^$]+\$_(.+)_\$[^$]+$/)[1];
  //              `----' greedy match

  // HACK - internal types for memory or storage also seem to be pointers
  if (baseIdentifier.match(/_(memory|storage)$/) != null) {
    baseIdentifier = baseIdentifier + "_ptr";
  }

  // another HACK - we get away with it becausewe're only using that one property
  return {
    typeDescriptions: {
      typeIdentifier: baseIdentifier
    }
  };
}

function toBigNumber(bytes) {
  if (bytes == undefined) {
    return undefined;
  } else if (typeof bytes == "string") {
    return new _bignumber.BigNumber(bytes, 16);
  } else if (typeof bytes == "number" || _bignumber.BigNumber.isBigNumber(bytes)) {
    return new _bignumber.BigNumber(bytes);
  } else if (bytes.reduce) {
    return bytes.reduce(function (num, byte) {
      return num.times(0x100).plus(byte);
    }, new _bignumber.BigNumber(0));
  }
}

function toSignedBigNumber(bytes) {
  if (bytes[0] < 128) {
    // first bit is 0
    return toBigNumber(bytes);
  } else {
    return toBigNumber(bytes.map(function (b) {
      return 0xff - b;
    })).plus(1).negated();
  }
}

/**
 * @param bytes - Uint8Array
 * @param length - desired byte length (pad with zeroes)
 * @param trim - omit leading zeroes
 */
function toHexString(bytes) {
  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var trim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (typeof length == "boolean") {
    trim = length;
    length = 0;
  }

  if (_bignumber.BigNumber.isBigNumber(bytes)) {
    bytes = toBytes(bytes);
  }

  var pad = function pad(s) {
    return "" + "00".slice(0, 2 - s.length) + s;
  };

  //                                          0  1  2  3  4
  //                                 0  1  2  3  4  5  6  7
  // bytes.length:        5  -  0x(          e5 c2 aa 09 11 )
  // length (preferred):  8  -  0x( 00 00 00 e5 c2 aa 09 11 )
  //                                `--.---'
  //                                     offset 3
  if (bytes.length < length) {
    var prior = bytes;
    bytes = new Uint8Array(length);

    bytes.set(prior, length - prior.length);
  }

  debug("bytes: %o", bytes);

  var string = bytes.reduce(function (str, byte) {
    return "" + str + pad(byte.toString(16));
  }, "");

  if (trim) {
    string = string.replace(/^(00)+/, "");
  }

  if (string.length == 0) {
    string = "00";
  }

  return "0x" + string;
}

function toBytes(number) {
  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  if (number < 0) {
    return [];
  }

  var hex = number.toString(16);
  if (hex.length % 2 == 1) {
    hex = "0" + hex;
  }

  var bytes = new Uint8Array(hex.match(/.{2}/g).map(function (byte) {
    return parseInt(byte, 16);
  }));

  if (bytes.length < length) {
    var prior = bytes;
    bytes = new Uint8Array(length);
    bytes.set(prior, length - prior.length);
  }

  return bytes;
}

function keccak256() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var web3 = new _web2.default();

  args = args.map(function (arg) {
    if (typeof arg == "number" || _bignumber.BigNumber.isBigNumber(arg)) {
      return toHexString(toBytes(arg, WORD_SIZE)).slice(2);
    } else if (typeof arg == "string") {
      return web3.toHex(arg).slice(2);
    } else {
      return "";
    }
  });

  var sha = web3.sha3(args.join(''), { encoding: 'hex' });
  debug("sha %o", sha);
  return toBigNumber(sha);
}

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/get-iterator");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _reselectTree = __webpack_require__(8);

var _jsonPointer = __webpack_require__(22);

var _jsonPointer2 = _interopRequireDefault(_jsonPointer);

var _selectors = __webpack_require__(12);

var _selectors2 = _interopRequireDefault(_selectors);

var _map = __webpack_require__(44);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:ast:selectors");

/**
 * ast
 */
var ast = (0, _reselectTree.createSelectorTree)({
  /**
   * ast.views
   */
  views: {
    /**
     * ast.views.sources
     */
    sources: (0, _reselectTree.createLeaf)([_selectors2.default.info.sources], function (sources) {
      return sources;
    })
  },

  /**
   * ast.current
   */
  current: {

    /**
     * ast.current.tree
     *
     * ast for current source
     */
    tree: (0, _reselectTree.createLeaf)([_selectors2.default.current.source], function (_ref) {
      var ast = _ref.ast;
      return ast;
    }),

    /**
     * ast.current.index
     *
     * source ID
     */
    index: (0, _reselectTree.createLeaf)([_selectors2.default.current.source], function (_ref2) {
      var id = _ref2.id;
      return id;
    }),

    /**
     * ast.current.pointer
     *
     * jsonpointer for current ast node
     */
    pointer: (0, _reselectTree.createLeaf)(["./tree", _selectors2.default.current.sourceRange], function (ast, range) {
      return (0, _map.findRange)(ast, range.start, range.length);
    }),

    /**
     * ast.current.node
     *
     * current ast node to execute
     */
    node: (0, _reselectTree.createLeaf)(["./tree", "./pointer"], function (ast, pointer) {
      return pointer ? _jsonPointer2.default.get(ast, pointer) : _jsonPointer2.default.get(ast, "");
    })

  }
});

exports.default = ast;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saveSteps = saveSteps;
exports.receiveAddresses = receiveAddresses;
exports.next = next;
exports.tick = tick;
exports.tock = tock;
exports.endTrace = endTrace;
var SAVE_STEPS = exports.SAVE_STEPS = "SAVE_STEPS";
function saveSteps(steps) {
  return {
    type: SAVE_STEPS,
    steps: steps
  };
}

var RECEIVE_ADDRESSES = exports.RECEIVE_ADDRESSES = "RECEIVE_ADDRESSES";
function receiveAddresses(addresses) {
  return {
    type: RECEIVE_ADDRESSES,
    addresses: addresses
  };
}

var NEXT = exports.NEXT = "NEXT";
function next() {
  return { type: NEXT };
}

var TICK = exports.TICK = "TICK";
function tick() {
  return { type: TICK };
}

var TOCK = exports.TOCK = "TOCK";
function tock() {
  return { type: TOCK };
}

var END_OF_TRACE = exports.END_OF_TRACE = "EOT";
function endTrace() {
  return { type: END_OF_TRACE };
}

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reselectTree = __webpack_require__(8);

var trace = (0, _reselectTree.createSelectorTree)({
  /**
   * trace.index
   *
   * current step index
   */
  index: function index(state) {
    return state.trace.proc.index;
  },

  /**
   * trace.steps
   *
   * all trace steps
   */
  steps: function steps(state) {
    return state.trace.info.steps;
  },

  /**
   * trace.stepsRemaining
   *
   * number of steps remaining in trace
   */
  stepsRemaining: (0, _reselectTree.createLeaf)(["./steps", "./index"], function (steps, index) {
    return steps.length - index;
  }),

  /**
   * trace.step
   *
   * current trace step
   */
  step: (0, _reselectTree.createLeaf)(["./steps", "./index"], function (steps, index) {
    return steps[index];
  }),

  /**
   * trace.next
   *
   * next trace step or {}
   */
  next: (0, _reselectTree.createLeaf)(["./steps", "./index"], function (steps, index) {
    return index < steps.length - 1 ? steps[index + 1] : {};
  })
});

exports.default = trace;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = require("bignumber.js");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/helpers/classCallCheck");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/helpers/createClass");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = require("json-pointer");

/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/object/keys");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.start = start;
exports.ready = ready;
exports.error = error;
exports.finish = finish;
exports.recordContracts = recordContracts;
var START = exports.START = "SESSION_START";
function start(txHash, provider) {
  return {
    type: START,
    txHash: txHash, provider: provider
  };
}

var READY = exports.READY = "SESSION_READY";
function ready() {
  return {
    type: READY
  };
}

var ERROR = exports.ERROR = "SESSION_ERROR";
function error(error) {
  return {
    type: ERROR,
    error: error
  };
}

var FINISH = exports.FINISH = "SESSION_FINISH";
function finish() {
  return {
    type: FINISH
  };
}

var RECORD_CONTRACTS = exports.RECORD_CONTRACTS = "RECORD_CONTRACTS";
function recordContracts(contexts, sources) {
  return {
    type: RECORD_CONTRACTS,
    contexts: contexts, sources: sources
  };
}

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/set");

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/helpers/asyncToGenerator");

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/helpers/typeof");

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/promise");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.beginStep = beginStep;
exports.advance = advance;
exports.stepNext = stepNext;
exports.stepOver = stepOver;
exports.stepInto = stepInto;
exports.stepOut = stepOut;
exports.interrupt = interrupt;
exports.continueUntil = continueUntil;
var BEGIN_STEP = exports.BEGIN_STEP = "BEGIN_STEP";
function beginStep(type) {
  return {
    type: BEGIN_STEP,
    stepType: type
  };
}

var ADVANCE = exports.ADVANCE = "ADVANCE";
function advance() {
  return { type: ADVANCE };
}

var STEP_NEXT = exports.STEP_NEXT = "STEP_NEXT";
function stepNext() {
  return { type: STEP_NEXT };
}

var STEP_OVER = exports.STEP_OVER = "STEP_OVER";
function stepOver() {
  return { type: STEP_OVER };
}

var STEP_INTO = exports.STEP_INTO = "STEP_INTO";
function stepInto() {
  return { type: STEP_INTO };
}

var STEP_OUT = exports.STEP_OUT = "STEP_OUT";
function stepOut() {
  return { type: STEP_OUT };
}

var INTERRUPT = exports.INTERRUPT = "INTERRUPT";
function interrupt() {
  return { type: INTERRUPT };
}

var CONTINUE_UNTIL = exports.CONTINUE_UNTIL = "CONTINUE_UNTIL";
function continueUntil() {
  for (var _len = arguments.length, breakpoints = Array(_len), _key = 0; _key < _len; _key++) {
    breakpoints[_key] = arguments[_key];
  }

  return {
    type: CONTINUE_UNTIL,
    breakpoints: breakpoints
  };
}

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("web3");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.scope = scope;
exports.declare = declare;
exports.saga = saga;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _effects = __webpack_require__(10);

var _jsonPointer = __webpack_require__(22);

var _jsonPointer2 = _interopRequireDefault(_jsonPointer);

var _helpers = __webpack_require__(6);

var _actions = __webpack_require__(17);

var _actions2 = __webpack_require__(32);

var actions = _interopRequireWildcard(_actions2);

var _selectors = __webpack_require__(33);

var _selectors2 = _interopRequireDefault(_selectors);

var _utils = __webpack_require__(14);

var utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/_regenerator2.default.mark(scope),
    _marked2 = /*#__PURE__*/_regenerator2.default.mark(declare),
    _marked3 = /*#__PURE__*/_regenerator2.default.mark(tickSaga),
    _marked4 = /*#__PURE__*/_regenerator2.default.mark(saga);

var debug = (0, _debug2.default)("debugger:data:sagas");

function scope(nodeId, pointer, parentId, sourceId) {
  return _regenerator2.default.wrap(function scope$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, _effects.put)(actions.scope(nodeId, pointer, parentId, sourceId));

        case 2:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, this);
}

function declare(node) {
  return _regenerator2.default.wrap(function declare$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _effects.put)(actions.declare(node));

        case 2:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

function tickSaga() {
  var _ref, tree, treeId, node, pointer, scopes, definitions, stack, top, parameters, returnParameters, assignments, storageVars, _storageVars, slot, index, allocation;

  return _regenerator2.default.wrap(function tickSaga$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, _effects.select)(_selectors2.default.views.ast);

        case 2:
          _ref = _context3.sent;
          tree = _ref.tree;
          treeId = _ref.id;
          node = _ref.node;
          pointer = _ref.pointer;
          _context3.next = 9;
          return (0, _effects.select)(_selectors2.default.info.scopes);

        case 9:
          scopes = _context3.sent;
          _context3.next = 12;
          return (0, _effects.select)(_selectors2.default.views.scopes.inlined);

        case 12:
          definitions = _context3.sent;
          _context3.next = 15;
          return (0, _effects.select)(_selectors2.default.next.state.stack);

        case 15:
          stack = _context3.sent;

          if (stack) {
            _context3.next = 18;
            break;
          }

          return _context3.abrupt("return");

        case 18:
          top = stack.length - 1;

          if (node) {
            _context3.next = 21;
            break;
          }

          return _context3.abrupt("return");

        case 21:
          _context3.t0 = node.nodeType;
          _context3.next = _context3.t0 === "FunctionDefinition" ? 24 : _context3.t0 === "ContractDefinition" ? 34 : _context3.t0 === "VariableDeclaration" ? 44 : 46;
          break;

        case 24:
          _context3.next = 26;
          return (0, _effects.select)(_selectors2.default.views.atLastInstructionForSourceRange);

        case 26:
          if (_context3.sent) {
            _context3.next = 28;
            break;
          }

          return _context3.abrupt("break", 47);

        case 28:

          parameters = node.parameters.parameters.map(function (p, i) {
            return pointer + "/parameters/parameters/" + i;
          });

          returnParameters = node.returnParameters.parameters.map(function (p, i) {
            return pointer + "/returnParameters/parameters/" + i;
          });

          assignments = returnParameters.concat(parameters).reverse().map(function (pointer) {
            return _jsonPointer2.default.get(tree, pointer).id;
          }).map(function (id, i) {
            return (0, _defineProperty3.default)({}, id, { "stack": top - i });
          }).reduce(function (acc, assignment) {
            return (0, _assign2.default)(acc, assignment);
          }, {});

          _context3.next = 33;
          return (0, _effects.put)(actions.assign(treeId, assignments));

        case 33:
          return _context3.abrupt("break", 47);

        case 34:
          _storageVars = scopes[node.id].variables || [];
          slot = 0;
          index = _utils.WORD_SIZE - 1; // cause lower-order

          debug("storage vars %o", _storageVars);

          allocation = utils.allocateDeclarations(_storageVars, definitions);

          assignments = _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(allocation.children).map(function (_ref3) {
            var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),
                id = _ref4[0],
                storage = _ref4[1];

            return (0, _defineProperty3.default)({}, id, { storage: storage });
          }))));
          debug("assignments %O", assignments);

          _context3.next = 43;
          return (0, _effects.put)(actions.assign(treeId, assignments));

        case 43:
          return _context3.abrupt("break", 47);

        case 44:
          _context3.next = 46;
          return (0, _effects.put)(actions.assign(treeId, (0, _defineProperty3.default)({}, _jsonPointer2.default.get(tree, pointer).id, { "stack": top })));

        case 46:
          return _context3.abrupt("break", 47);

        case 47:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3, this);
}

function saga() {
  return _regenerator2.default.wrap(function saga$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return (0, _effects.takeEvery)(_actions.TICK, /*#__PURE__*/_regenerator2.default.mark(function _callee() {
            return _regenerator2.default.wrap(function _callee$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    _context4.prev = 0;
                    return _context4.delegateYield(tickSaga(), "t0", 2);

                  case 2:
                    _context4.next = 7;
                    break;

                  case 4:
                    _context4.prev = 4;
                    _context4.t1 = _context4["catch"](0);

                    debug(_context4.t1);

                  case 7:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee, this, [[0, 4]]);
          }));

        case 2:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked4, this);
}

exports.default = (0, _helpers.prefixName)("data", saga);

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scope = scope;
exports.declare = declare;
exports.assign = assign;
var SCOPE = exports.SCOPE = "SCOPE";
function scope(id, pointer, parentId, sourceId) {
  return {
    type: SCOPE,
    id: id, pointer: pointer, parentId: parentId, sourceId: sourceId
  };
}

var DECLARE = exports.DECLARE = "DECLARE_VARIABLE";
function declare(node) {
  return {
    type: DECLARE,
    node: node
  };
}

var ASSIGN = exports.ASSIGN = "ASSIGN";
function assign(context, assignments) {
  return {
    type: ASSIGN,
    context: context, assignments: assignments
  };
}

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(9);

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _reselectTree = __webpack_require__(8);

var _jsonPointer = __webpack_require__(22);

var _jsonPointer2 = _interopRequireDefault(_jsonPointer);

var _selectors = __webpack_require__(16);

var _selectors2 = _interopRequireDefault(_selectors);

var _selectors3 = __webpack_require__(11);

var _selectors4 = _interopRequireDefault(_selectors3);

var _selectors5 = __webpack_require__(12);

var _selectors6 = _interopRequireDefault(_selectors5);

var _decode = __webpack_require__(53);

var _decode2 = _interopRequireDefault(_decode);

var _utils = __webpack_require__(14);

var decodeUtils = _interopRequireWildcard(_utils);

var _bignumber = __webpack_require__(19);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:data:selectors");

function createStateSelectors(_ref) {
  var stack = _ref.stack,
      memory = _ref.memory,
      storage = _ref.storage;

  return {
    /**
     * .stack
     */
    stack: (0, _reselectTree.createLeaf)([stack], function (words) {
      return (words || []).map(function (word) {
        return decodeUtils.toBytes(decodeUtils.toBigNumber(word, decodeUtils.WORD_SIZE));
      });
    }),

    /**
     * .memory
     */
    memory: (0, _reselectTree.createLeaf)([memory], function (words) {
      return new Uint8Array((words.join("").match(/.{1,2}/g) || []).map(function (byte) {
        return parseInt(byte, 16);
      }));
    }),

    /**
     * .storage
     */
    storage: (0, _reselectTree.createLeaf)([storage], function (mapping) {
      return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(mapping).map(function (_ref2) {
        var _ref3 = (0, _slicedToArray3.default)(_ref2, 2),
            address = _ref3[0],
            word = _ref3[1];

        return (0, _defineProperty3.default)({}, "0x" + address, new Uint8Array((word.match(/.{1,2}/g) || []).map(function (byte) {
          return parseInt(byte, 16);
        })));
      }))));
    })
  };
}

var data = (0, _reselectTree.createSelectorTree)({
  state: function state(_state) {
    return _state.data;
  },

  /**
   * data.views
   */
  views: {
    ast: (0, _reselectTree.createLeaf)([_selectors2.default.current], function (tree) {
      return tree;
    }),

    atLastInstructionForSourceRange: (0, _reselectTree.createLeaf)([_selectors6.default.current.isSourceRangeFinal], function (final) {
      return final;
    }),

    /**
     * data.views.scopes
     */
    scopes: {

      /**
       * data.views.scopes.inlined
       */
      inlined: (0, _reselectTree.createLeaf)(["/info/scopes", _selectors6.default.info.sources], function (scopes, sources) {
        return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(scopes).map(function (_ref5) {
          var _ref6 = (0, _slicedToArray3.default)(_ref5, 2),
              id = _ref6[0],
              entry = _ref6[1];

          return (0, _defineProperty3.default)({}, id, (0, _extends3.default)({}, entry, {

            definition: _jsonPointer2.default.get(sources[entry.sourceId].ast, entry.pointer)
          }));
        }))));
      })
    },

    /**
     * data.views.decoder
     *
     * selector returns (ast node definition, data reference) => value
     */
    decoder: (0, _reselectTree.createLeaf)(["/views/scopes/inlined", "/current/state"], function (scopes, state) {
      return function (definition, ref) {
        return (0, _decode2.default)(definition, ref, state, scopes);
      };
    })
  },

  /**
   * data.info
   */
  info: {

    /**
     * data.info.scopes
     */
    scopes: (0, _reselectTree.createLeaf)(["/state"], function (state) {
      return state.info.scopes.byId;
    })
  },

  /**
   * data.proc
   */
  proc: {

    /**
     * data.proc.assignments
     */
    assignments: (0, _reselectTree.createLeaf)(["/state"], function (state) {
      return state.proc.assignments.byId;
    })
  },

  /**
   * data.current
   */
  current: {
    /**
     *
     * data.current.scope
     */
    scope: {

      /**
       * data.current.scope.id
       */
      id: (0, _reselectTree.createLeaf)([_selectors2.default.current.node], function (node) {
        return node.id;
      })
    },

    /**
     * data.current.state
     */
    state: createStateSelectors(_selectors4.default.current.state),

    /**
     * data.current.identifiers (namespace)
     */
    identifiers: {

      /**
       * data.current.identifiers (selector)
       *
       * returns identifers and corresponding definition node ID
       */
      _: (0, _reselectTree.createLeaf)(["/views/scopes/inlined", "/current/scope"], function (scopes, scope) {
        var cur = scope.id;
        var variables = {};

        do {
          variables = _assign2.default.apply(Object, [variables].concat((0, _toConsumableArray3.default)((scopes[cur].variables || []).filter(function (v) {
            return variables[v.name] == undefined;
          }).map(function (v) {
            return (0, _defineProperty3.default)({}, v.name, v.id);
          }))));

          cur = scopes[cur].parentId;
        } while (cur != null);

        return variables;
      }),

      /**
       * data.current.identifiers.definitions
       *
       * current variable definitions
       */
      definitions: (0, _reselectTree.createLeaf)(["/views/scopes/inlined", "./_"], function (scopes, identifiers) {
        return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(identifiers).map(function (_ref9) {
          var _ref10 = (0, _slicedToArray3.default)(_ref9, 2),
              identifier = _ref10[0],
              id = _ref10[1];

          var definition = scopes[id].definition;


          return (0, _defineProperty3.default)({}, identifier, definition);
        }))));
      }),

      /**
       * data.current.identifiers.refs
       *
       * current variables' value refs
       */
      refs: (0, _reselectTree.createLeaf)(["/proc/assignments", "./_"], function (assignments, identifiers) {
        return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(identifiers).map(function (_ref12) {
          var _ref13 = (0, _slicedToArray3.default)(_ref12, 2),
              identifier = _ref13[0],
              id = _ref13[1];

          var _ref14 = assignments[id] || {},
              ref = _ref14.ref;

          if (!ref) {
            return undefined;
          };

          return (0, _defineProperty3.default)({}, identifier, ref);
        }))));
      }),

      decoded: (0, _reselectTree.createLeaf)(["/views/decoder", "./definitions", "./refs"], function (decode, definitions, refs) {
        return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(refs).map(function (_ref16) {
          var _ref17 = (0, _slicedToArray3.default)(_ref16, 2),
              identifier = _ref17[0],
              ref = _ref17[1];

          return (0, _defineProperty3.default)({}, identifier, decode(definitions[identifier], ref));
        }))));
      }),

      native: (0, _reselectTree.createLeaf)(['./decoded'], decodeUtils.cleanBigNumbers)
    }
  },

  /**
   * data.next
   */
  next: {

    /**
     * data.next.state
     */
    state: createStateSelectors(_selectors4.default.next.state)
  }
});

exports.default = data;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _set = __webpack_require__(25);

var _set2 = _interopRequireDefault(_set);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.advance = advance;
exports.wait = wait;
exports.processTrace = processTrace;
exports.saga = saga;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _effects = __webpack_require__(10);

var _helpers = __webpack_require__(6);

var _actions = __webpack_require__(17);

var actions = _interopRequireWildcard(_actions);

var _selectors = __webpack_require__(18);

var _selectors2 = _interopRequireDefault(_selectors);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/_regenerator2.default.mark(waitForTrace),
    _marked2 = /*#__PURE__*/_regenerator2.default.mark(advance),
    _marked3 = /*#__PURE__*/_regenerator2.default.mark(next),
    _marked4 = /*#__PURE__*/_regenerator2.default.mark(wait),
    _marked5 = /*#__PURE__*/_regenerator2.default.mark(processTrace),
    _marked6 = /*#__PURE__*/_regenerator2.default.mark(saga);

var debug = (0, _debug2.default)("debugger:trace:sagas");

function waitForTrace() {
  var _ref, steps, addresses;

  return _regenerator2.default.wrap(function waitForTrace$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, _effects.take)(actions.SAVE_STEPS);

        case 2:
          _ref = _context.sent;
          steps = _ref.steps;
          addresses = [].concat((0, _toConsumableArray3.default)(new _set2.default(steps.filter(function (_ref2) {
            var op = _ref2.op;
            return op == "CALL" || op == "DELEGATECALL";
          }).map(function (_ref3) {
            var stack = _ref3.stack;
            return "0x" + stack[stack.length - 2].substring(24);
          }))));
          _context.next = 7;
          return (0, _effects.put)(actions.receiveAddresses(addresses));

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, this);
}

function advance() {
  return _regenerator2.default.wrap(function advance$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _effects.put)(actions.next());

        case 2:
          _context2.next = 4;
          return (0, _effects.take)(actions.TOCK);

        case 4:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

function next() {
  var remaining, steps;
  return _regenerator2.default.wrap(function next$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, _effects.select)(_selectors2.default.stepsRemaining);

        case 2:
          remaining = _context3.sent;

          debug("remaining: %o", remaining);
          _context3.next = 6;
          return (0, _effects.select)(_selectors2.default.steps);

        case 6:
          steps = _context3.sent;

          debug("total steps: %o", steps.length);

          if (!(remaining > 0)) {
            _context3.next = 14;
            break;
          }

          debug("putting TICK");
          // updates state for current step
          _context3.next = 12;
          return (0, _effects.put)(actions.tick());

        case 12:
          debug("put TICK");

          remaining--; // local update, just for convenience

        case 14:
          if (!remaining) {
            _context3.next = 21;
            break;
          }

          debug("putting TOCK");
          // updates step to next step in trace
          _context3.next = 18;
          return (0, _effects.put)(actions.tock());

        case 18:
          debug("put TOCK");

          _context3.next = 23;
          break;

        case 21:
          _context3.next = 23;
          return (0, _effects.put)(actions.endTrace());

        case 23:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3, this);
}

function wait() {
  return _regenerator2.default.wrap(function wait$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return (0, _effects.take)(actions.END_OF_TRACE);

        case 2:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4, this);
}

function processTrace(trace) {
  var _ref4, addresses;

  return _regenerator2.default.wrap(function processTrace$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return (0, _effects.put)(actions.saveSteps(trace));

        case 2:
          _context5.next = 4;
          return (0, _effects.take)(actions.RECEIVE_ADDRESSES);

        case 4:
          _ref4 = _context5.sent;
          addresses = _ref4.addresses;

          debug("received addresses");

          return _context5.abrupt("return", addresses);

        case 8:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked5, this);
}

function saga() {
  return _regenerator2.default.wrap(function saga$(_context6) {
    while (1) {
      switch (_context6.prev = _context6.next) {
        case 0:
          return _context6.delegateYield(waitForTrace(), "t0", 1);

        case 1:
          _context6.next = 3;
          return (0, _effects.takeEvery)(actions.NEXT, next);

        case 3:
        case "end":
          return _context6.stop();
      }
    }
  }, _marked6, this);
}

exports.default = (0, _helpers.prefixName)("trace", saga);

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addSource = addSource;
exports.addSourceMap = addSourceMap;
exports.jump = jump;
var ADD_SOURCE = exports.ADD_SOURCE = "SOLIDITY_ADD_SOURCE";
function addSource(source, sourcePath, ast) {
  return {
    type: ADD_SOURCE,
    source: source, sourcePath: sourcePath, ast: ast
  };
}

var ADD_SOURCEMAP = exports.ADD_SOURCEMAP = "SOLIDITY_ADD_SOURCEMAP";
function addSourceMap(binary, sourceMap) {
  return {
    type: ADD_SOURCEMAP,
    binary: binary, sourceMap: sourceMap
  };
}

var JUMP = exports.JUMP = "JUMP";
function jump(jumpDirection) {
  return {
    type: JUMP,
    jumpDirection: jumpDirection
  };
}

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addContext = addContext;
exports.addInstance = addInstance;
exports.call = call;
exports.create = create;
exports.returnCall = returnCall;
var ADD_CONTEXT = exports.ADD_CONTEXT = "EVM_ADD_CONTEXT";
function addContext(contractName, binary) {
  return {
    type: ADD_CONTEXT,
    contractName: contractName, binary: binary
  };
}

var ADD_INSTANCE = exports.ADD_INSTANCE = "EVM_ADD_INSTANCE";
function addInstance(address, context, binary) {
  return {
    type: ADD_INSTANCE,
    address: address, context: context, binary: binary
  };
}

var CALL = exports.CALL = "CALL";
function call(address) {
  return {
    type: CALL,
    address: address
  };
}

var CREATE = exports.CREATE = "CREATE";
function create(binary) {
  return {
    type: CREATE,
    binary: binary
  };
}

var RETURN = exports.RETURN = "RETURN";
function returnCall() {
  return {
    type: RETURN
  };
}

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var Debugger = __webpack_require__(38).default;

module.exports = Debugger;



/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(26);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(20);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(21);

var _createClass3 = _interopRequireDefault(_createClass2);

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _truffleExpect = __webpack_require__(39);

var _truffleExpect2 = _interopRequireDefault(_truffleExpect);

var _session = __webpack_require__(40);

var _session2 = _interopRequireDefault(_session);

var _reselectTree = __webpack_require__(8);

var _selectors = __webpack_require__(33);

var _selectors2 = _interopRequireDefault(_selectors);

var _selectors3 = __webpack_require__(16);

var _selectors4 = _interopRequireDefault(_selectors3);

var _selectors5 = __webpack_require__(18);

var _selectors6 = _interopRequireDefault(_selectors5);

var _selectors7 = __webpack_require__(11);

var _selectors8 = _interopRequireDefault(_selectors7);

var _selectors9 = __webpack_require__(12);

var _selectors10 = _interopRequireDefault(_selectors9);

var _selectors11 = __webpack_require__(70);

var _selectors12 = _interopRequireDefault(_selectors11);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger");

/**
 * @example
 * let session = Debugger
 *   .forTx(<txHash>, {
 *     contracts: [<contract obj>, ...],
 *     provider: <provider instance>
 *   })
 *   .connect();
 */

var Debugger = function () {
  /**
   * @param {Session} session - debugger session
   * @private
   */
  function Debugger(session) {
    (0, _classCallCheck3.default)(this, Debugger);

    /**
     * @private
     */
    this._session = session;
  }

  /**
   * Instantiates a Debugger for a given transaction hash.
   *
   * @param {String} txHash - transaction hash with leading "0x"
   * @param {{contracts: Array<Contract>, files: Array<String>, provider: Web3Provider}} options -
   * @return {Debugger} instance
   */


  (0, _createClass3.default)(Debugger, [{
    key: "connect",


    /**
     * Connects to the instantiated Debugger.
     *
     * @return {Session} session instance
     */
    value: function connect() {
      return this._session;
    }

    /**
     * Exported selectors
     *
     * See individual selector docs for full listing
     *
     * @example
     * Debugger.selectors.ast.current.tree
     *
     * @example
     * Debugger.selectors.solidity.current.instruction
     *
     * @example
     * Debugger.selectors.trace.steps
     */

  }], [{
    key: "forTx",
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(txHash) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var session;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _truffleExpect2.default.options(options, ["contracts", "provider"]);

                session = new _session2.default(options.contracts, options.files, txHash, options.provider);
                _context.prev = 2;
                _context.next = 5;
                return session.ready();

              case 5:
                _context.next = 10;
                break;

              case 7:
                _context.prev = 7;
                _context.t0 = _context["catch"](2);
                throw _context.t0;

              case 10:
                return _context.abrupt("return", new this(session));

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[2, 7]]);
      }));

      function forTx(_x2) {
        return _ref.apply(this, arguments);
      }

      return forTx;
    }()
  }, {
    key: "selectors",
    get: function get() {
      return (0, _reselectTree.createNestedSelector)({
        ast: _selectors4.default,
        data: _selectors2.default,
        trace: _selectors6.default,
        evm: _selectors8.default,
        solidity: _selectors10.default,
        session: _selectors12.default
      });
    }
  }]);
  return Debugger;
}();

/**
 * @typedef {Object} Contract
 * @property {string} contractName contract name
 * @property {string} source solidity source code
 * @property {string} sourcePath path to source file
 * @property {string} binary 0x-prefixed hex string with create bytecode
 * @property {string} sourceMap solidity source map for create bytecode
 * @property {Object} ast Abstract Syntax Tree from Solidity
 * @property {string} deployedBinary 0x-prefixed compiled binary (on chain)
 * @property {string} deployedSourceMap solidity source map for on-chain bytecode
 */


exports.default = Debugger;

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("truffle-expect");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getIterator2 = __webpack_require__(15);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _values = __webpack_require__(41);

var _values2 = _interopRequireDefault(_values);

var _typeof2 = __webpack_require__(27);

var _typeof3 = _interopRequireDefault(_typeof2);

var _promise = __webpack_require__(28);

var _promise2 = _interopRequireDefault(_promise);

var _classCallCheck2 = __webpack_require__(20);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(21);

var _createClass3 = _interopRequireDefault(_createClass2);

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _selectors = __webpack_require__(18);

var _selectors2 = _interopRequireDefault(_selectors);

var _selectors3 = __webpack_require__(11);

var _selectors4 = _interopRequireDefault(_selectors3);

var _selectors5 = __webpack_require__(16);

var _selectors6 = _interopRequireDefault(_selectors5);

var _selectors7 = __webpack_require__(12);

var _selectors8 = _interopRequireDefault(_selectors7);

var _store = __webpack_require__(46);

var _store2 = _interopRequireDefault(_store);

var _actions = __webpack_require__(29);

var controller = _interopRequireWildcard(_actions);

var _actions2 = __webpack_require__(24);

var actions = _interopRequireWildcard(_actions2);

var _sagas = __webpack_require__(51);

var _sagas2 = _interopRequireDefault(_sagas);

var _reducers = __webpack_require__(64);

var _reducers2 = _interopRequireDefault(_reducers);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:session");

/**
 * Debugger Session
 */
var Session = function () {
  /**
   * @param {Array<Contract>} contracts - contract definitions
   * @param {Array<String>} files - array of filenames for sourceMap indexes
   * @param {string} txHash - transaction hash
   * @param {Web3Provider} provider - web3 provider
   * @private
   */
  function Session(contracts, files, txHash, provider) {
    (0, _classCallCheck3.default)(this, Session);

    /**
     * @private
     */
    this._store = (0, _store2.default)(_reducers2.default, _sagas2.default);

    var _Session$normalize = Session.normalize(contracts, files),
        contexts = _Session$normalize.contexts,
        sources = _Session$normalize.sources;

    // record contracts


    this._store.dispatch(actions.recordContracts(contexts, sources));

    this._store.dispatch(actions.start(txHash, provider));
  }

  (0, _createClass3.default)(Session, [{
    key: "ready",
    value: function ready() {
      var _this = this;

      return new _promise2.default(function (accept, reject) {
        _this._store.subscribe(function () {
          if (_this.state.session == "ACTIVE") {
            accept();
          } else if ((0, _typeof3.default)(_this.state.session) == "object") {
            reject(_this.state.session.error);
          }
        });
      });
    }

    /**
     * Split up artifacts into "contexts" and "sources", dividing artifact
     * data into appropriate buckets.
     *
     * Multiple contracts can be defined in the same source file, but have
     * different bytecodes.
     *
     * This iterates over the contracts and collects binaries separately
     * from sources, using the optional `files` argument to force
     * source ordering.
     * @private
     */

  }, {
    key: "view",
    value: function view(selector) {
      return selector(this.state);
    }
  }, {
    key: "dispatch",
    value: function dispatch(action) {
      if (this.finished) {
        debug("finished: intercepting action %o", action);

        return false;
      }

      this._store.dispatch(action);

      return true;
    }
  }, {
    key: "interrupt",
    value: function interrupt() {
      return this.dispatch(controller.interrupt());
    }
  }, {
    key: "advance",
    value: function advance() {
      return this.dispatch(controller.advance());
    }
  }, {
    key: "stepNext",
    value: function stepNext() {
      return this.dispatch(controller.stepNext());
    }
  }, {
    key: "stepOver",
    value: function stepOver() {
      return this.dispatch(controller.stepOver());
    }
  }, {
    key: "stepInto",
    value: function stepInto() {
      return this.dispatch(controller.stepInto());
    }
  }, {
    key: "stepOut",
    value: function stepOut() {
      return this.dispatch(controller.stepOut());
    }
  }, {
    key: "continueUntil",
    value: function continueUntil() {
      return this.dispatch(controller.continueUntil.apply(controller, arguments));
    }
  }, {
    key: "state",
    get: function get() {
      return this._store.getState();
    }
  }, {
    key: "finished",
    get: function get() {
      return this.state.session == "FINISHED";
    }
  }, {
    key: "failed",
    get: function get() {
      return this.finished && this.view(_selectors4.default.current.callstack).length;
    }
  }], [{
    key: "normalize",
    value: function normalize(contracts) {
      var files = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      var sourcesByPath = {};
      var contexts = [];
      var sources = void 0;

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = (0, _getIterator3.default)(contracts), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var contract = _step.value;
          var contractName = contract.contractName,
              binary = contract.binary,
              sourceMap = contract.sourceMap,
              deployedBinary = contract.deployedBinary,
              deployedSourceMap = contract.deployedSourceMap,
              sourcePath = contract.sourcePath,
              source = contract.source,
              _ast = contract.ast;


          sourcesByPath[sourcePath] = { sourcePath: sourcePath, source: source, ast: _ast };

          if (binary && binary != "0x") {
            contexts.push({
              contractName: contractName,
              binary: binary,
              sourceMap: sourceMap
            });
          }

          if (deployedBinary && deployedBinary != "0x") {
            contexts.push({
              contractName: contractName,
              binary: deployedBinary,
              sourceMap: deployedSourceMap
            });
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      if (!files) {
        sources = (0, _values2.default)(sourcesByPath);
      } else {
        sources = files.map(function (file) {
          return sourcesByPath[file];
        });
      }

      return { contexts: contexts, sources: sources };
    }
  }]);
  return Session;
}();

exports.default = Session;

/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/object/values");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = require("truffle-solidity-utils");

/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = require("truffle-code-utils");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = __webpack_require__(23);

var _keys2 = _interopRequireDefault(_keys);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

exports.getRange = getRange;
exports.rangeNodes = rangeNodes;
exports.findRange = findRange;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _nodeIntervalTree = __webpack_require__(45);

var _nodeIntervalTree2 = _interopRequireDefault(_nodeIntervalTree);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:ast:map");

/**
 * @private
 */
function getRange(node) {
  // src: "<start>:<length>:<_>"
  // returns [start, end]
  var _node$src$split$slice = node.src.split(":").slice(0, 2).map(function (i) {
    return parseInt(i);
  }),
      _node$src$split$slice2 = (0, _slicedToArray3.default)(_node$src$split$slice, 2),
      start = _node$src$split$slice2[0],
      length = _node$src$split$slice2[1];

  return [start, start + length];
}

/**
 * @private
 */
function rangeNodes(node) {
  var pointer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

  if (node instanceof Array) {
    var _ref;

    return (_ref = []).concat.apply(_ref, (0, _toConsumableArray3.default)(node.map(function (sub, i) {
      return rangeNodes(sub, pointer + "/" + i);
    })));
  } else if (node instanceof Object) {
    var results = [];

    if (node.src) {
      results.push({ pointer: pointer, range: getRange(node) });
    }

    return results.concat.apply(results, (0, _toConsumableArray3.default)((0, _keys2.default)(node).map(function (key) {
      return rangeNodes(node[key], pointer + "/" + key);
    })));
  } else {
    return [];
  }
}

/**
 * @private
 */
function findRange(node, sourceStart, sourceLength) {
  var ranges = rangeNodes(node);
  var tree = new _nodeIntervalTree2.default();

  ranges.forEach(function (_ref2) {
    var range = _ref2.range,
        pointer = _ref2.pointer;

    var _range = (0, _slicedToArray3.default)(range, 2),
        start = _range[0],
        end = _range[1];

    tree.insert(start, end, { range: range, pointer: pointer });
  });

  var sourceEnd = sourceStart + sourceLength;

  var overlapping = tree.search(sourceStart, sourceEnd);

  // find nodes that fully contain requested range,
  // return longest pointer
  return overlapping.filter(function (_ref3) {
    var range = _ref3.range;
    return sourceStart >= range[0] && sourceEnd <= range[1];
  }).map(function (_ref4) {
    var pointer = _ref4.pointer;
    return pointer;
  }).reduce(function (a, b) {
    return a.length > b.length ? a : b;
  }, "");
}

/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = require("node-interval-tree");

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(47);
} else if (process.env.NODE_ENV == "test") {
  module.exports = require("./test");
} else {
  module.exports = require("./development");
}

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _common = __webpack_require__(48);

var _common2 = _interopRequireDefault(_common);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _common2.default;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.abbreviateValues = abbreviateValues;
exports.default = configureStore;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _redux = __webpack_require__(13);

var _reduxSaga = __webpack_require__(49);

var _reduxSaga2 = _interopRequireDefault(_reduxSaga);

var _reduxCliLogger = __webpack_require__(50);

var _reduxCliLogger2 = _interopRequireDefault(_reduxCliLogger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:store:common");
var reduxDebug = (0, _debug2.default)("debugger:redux");

function abbreviateValues(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

  options.stringLimit = options.stringLimit || 66;
  options.arrayLimit = options.arrayLimit || 8;
  options.recurseLimit = options.recurseLimit || 4;

  if (depth > options.recurseLimit) {
    return "...";
  }

  var recurse = function recurse(child) {
    return abbreviateValues(child, options, depth + 1);
  };

  if (value instanceof Array) {
    if (value.length > options.arrayLimit) {
      value = [].concat((0, _toConsumableArray3.default)(value.slice(0, options.arrayLimit / 2)), ["..."], (0, _toConsumableArray3.default)(value.slice(value.length - options.arrayLimit / 2 + 1)));
    }

    return value.map(recurse);
  } else if (value instanceof Object) {
    return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(value).map(function (_ref) {
      var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
          k = _ref2[0],
          v = _ref2[1];

      return (0, _defineProperty3.default)({}, recurse(k), recurse(v));
    }))));
  } else if (typeof value === "string" && value.length > options.stringLimit) {
    var inner = "...";
    var extractAmount = (options.stringLimit - inner.length) / 2;
    var leading = value.slice(0, Math.ceil(extractAmount));
    var trailing = value.slice(value.length - Math.floor(extractAmount));
    return "" + leading + inner + trailing;
  } else {
    return value;
  }
}

function configureStore(reducer, saga, initialState, composeEnhancers) {
  var sagaMiddleware = (0, _reduxSaga2.default)();

  if (!composeEnhancers) {
    composeEnhancers = _redux.compose;
  }

  var loggerMiddleware = (0, _reduxCliLogger2.default)({
    log: reduxDebug,
    stateTransformer: function stateTransformer(state) {
      return abbreviateValues(state, {
        arrayLimit: 4,
        recurseLimit: 3
      });
    },
    actionTransformer: abbreviateValues
  });

  var store = (0, _redux.createStore)(reducer, initialState, composeEnhancers((0, _redux.applyMiddleware)(sagaMiddleware, loggerMiddleware)));

  sagaMiddleware.run(saga);

  return store;
}

/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = require("redux-saga");

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = require("redux-cli-logger");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getIterator2 = __webpack_require__(15);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.saga = saga;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _effects = __webpack_require__(10);

var _helpers = __webpack_require__(6);

var _sagas = __webpack_require__(52);

var ast = _interopRequireWildcard(_sagas);

var _sagas2 = __webpack_require__(57);

var controller = _interopRequireWildcard(_sagas2);

var _sagas3 = __webpack_require__(59);

var solidity = _interopRequireWildcard(_sagas3);

var _sagas4 = __webpack_require__(60);

var evm = _interopRequireWildcard(_sagas4);

var _sagas5 = __webpack_require__(34);

var trace = _interopRequireWildcard(_sagas5);

var _sagas6 = __webpack_require__(31);

var data = _interopRequireWildcard(_sagas6);

var _sagas7 = __webpack_require__(61);

var web3 = _interopRequireWildcard(_sagas7);

var _actions = __webpack_require__(24);

var actions = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/_regenerator2.default.mark(saga),
    _marked2 = /*#__PURE__*/_regenerator2.default.mark(forkListeners),
    _marked3 = /*#__PURE__*/_regenerator2.default.mark(fetchTx),
    _marked4 = /*#__PURE__*/_regenerator2.default.mark(recordContexts),
    _marked5 = /*#__PURE__*/_regenerator2.default.mark(recordSources),
    _marked6 = /*#__PURE__*/_regenerator2.default.mark(recordInstance),
    _marked7 = /*#__PURE__*/_regenerator2.default.mark(ready),
    _marked8 = /*#__PURE__*/_regenerator2.default.mark(error);

var debug = (0, _debug2.default)("debugger:session:sagas");

function saga() {
  var listeners, _ref, contexts, sources, _ref2, txHash, provider, err;

  return _regenerator2.default.wrap(function saga$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          debug("starting listeners");
          return _context.delegateYield(forkListeners(), "t0", 2);

        case 2:
          listeners = _context.t0;


          // receiving & saving contracts into state
          debug("waiting for contract information");
          _context.next = 6;
          return (0, _effects.take)(actions.RECORD_CONTRACTS);

        case 6:
          _ref = _context.sent;
          contexts = _ref.contexts;
          sources = _ref.sources;


          debug("recording contract binaries");
          return _context.delegateYield(recordContexts.apply(undefined, (0, _toConsumableArray3.default)(contexts)), "t1", 11);

        case 11:

          debug("recording contract sources");
          return _context.delegateYield(recordSources.apply(undefined, (0, _toConsumableArray3.default)(sources)), "t2", 13);

        case 13:

          debug("waiting for start");
          // wait for start signal
          _context.next = 16;
          return (0, _effects.take)(actions.START);

        case 16:
          _ref2 = _context.sent;
          txHash = _ref2.txHash;
          provider = _ref2.provider;

          debug("starting");

          // process transaction
          debug("fetching transaction info");
          return _context.delegateYield(fetchTx(txHash, provider), "t3", 22);

        case 22:
          err = _context.t3;

          if (!err) {
            _context.next = 28;
            break;
          }

          debug("error %o", err);
          return _context.delegateYield(error(err), "t4", 26);

        case 26:
          _context.next = 37;
          break;

        case 28:
          debug("visiting ASTs");
          // visit asts
          return _context.delegateYield(ast.visitAll(), "t5", 30);

        case 30:

          debug("readying");
          // signal that stepping can begin
          return _context.delegateYield(ready(), "t6", 32);

        case 32:

          debug("waiting for trace EOT");
          // wait until trace hits EOT
          return _context.delegateYield(trace.wait(), "t7", 34);

        case 34:

          debug("finishing");
          // finish
          _context.next = 37;
          return (0, _effects.put)(actions.finish());

        case 37:

          debug("stopping listeners");
          _context.next = 40;
          return (0, _effects.all)(listeners.map(function (task) {
            return (0, _effects.cancel)(task);
          }));

        case 40:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, this);
}

exports.default = (0, _helpers.prefixName)("session", saga);


function forkListeners() {
  return _regenerator2.default.wrap(function forkListeners$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _effects.all)([ast, controller, data, evm, solidity, trace, web3].map(function (app) {
            return (0, _effects.fork)(app.saga);
          }));

        case 2:
          return _context2.abrupt("return", _context2.sent);

        case 3:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

function fetchTx(txHash, provider) {
  var result, addresses, binaries;
  return _regenerator2.default.wrap(function fetchTx$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          return _context3.delegateYield(web3.inspectTransaction(txHash, provider), "t0", 1);

        case 1:
          result = _context3.t0;

          if (!result.error) {
            _context3.next = 4;
            break;
          }

          return _context3.abrupt("return", result.error);

        case 4:
          return _context3.delegateYield(evm.begin(result), "t1", 5);

        case 5:
          return _context3.delegateYield(trace.processTrace(result.trace), "t2", 6);

        case 6:
          addresses = _context3.t2;

          if (result.address && addresses.indexOf(result.address) == -1) {
            addresses.push(result.address);
          }

          return _context3.delegateYield(web3.obtainBinaries(addresses), "t3", 9);

        case 9:
          binaries = _context3.t3;
          _context3.next = 12;
          return (0, _effects.all)(addresses.map(function (address, i) {
            return (0, _effects.call)(recordInstance, address, binaries[i]);
          }));

        case 12:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3, this);
}

function recordContexts() {
  for (var _len = arguments.length, contexts = Array(_len), _key = 0; _key < _len; _key++) {
    contexts[_key] = arguments[_key];
  }

  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _ref3, contractName, binary, sourceMap;

  return _regenerator2.default.wrap(function recordContexts$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context4.prev = 3;
          _iterator = (0, _getIterator3.default)(contexts);

        case 5:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context4.next = 14;
            break;
          }

          _ref3 = _step.value;
          contractName = _ref3.contractName, binary = _ref3.binary, sourceMap = _ref3.sourceMap;
          return _context4.delegateYield(evm.addContext(contractName, binary), "t0", 9);

        case 9:
          if (!sourceMap) {
            _context4.next = 11;
            break;
          }

          return _context4.delegateYield(solidity.addSourceMap(binary, sourceMap), "t1", 11);

        case 11:
          _iteratorNormalCompletion = true;
          _context4.next = 5;
          break;

        case 14:
          _context4.next = 20;
          break;

        case 16:
          _context4.prev = 16;
          _context4.t2 = _context4["catch"](3);
          _didIteratorError = true;
          _iteratorError = _context4.t2;

        case 20:
          _context4.prev = 20;
          _context4.prev = 21;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 23:
          _context4.prev = 23;

          if (!_didIteratorError) {
            _context4.next = 26;
            break;
          }

          throw _iteratorError;

        case 26:
          return _context4.finish(23);

        case 27:
          return _context4.finish(20);

        case 28:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4, this, [[3, 16, 20, 28], [21,, 23, 27]]);
}

function recordSources() {
  for (var _len2 = arguments.length, sources = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    sources[_key2] = arguments[_key2];
  }

  var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _ref4, sourcePath, source, _ast;

  return _regenerator2.default.wrap(function recordSources$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context5.prev = 3;
          _iterator2 = (0, _getIterator3.default)(sources);

        case 5:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context5.next = 12;
            break;
          }

          _ref4 = _step2.value;
          sourcePath = _ref4.sourcePath, source = _ref4.source, _ast = _ref4.ast;
          return _context5.delegateYield(solidity.addSource(source, sourcePath, _ast), "t0", 9);

        case 9:
          _iteratorNormalCompletion2 = true;
          _context5.next = 5;
          break;

        case 12:
          _context5.next = 18;
          break;

        case 14:
          _context5.prev = 14;
          _context5.t1 = _context5["catch"](3);
          _didIteratorError2 = true;
          _iteratorError2 = _context5.t1;

        case 18:
          _context5.prev = 18;
          _context5.prev = 19;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 21:
          _context5.prev = 21;

          if (!_didIteratorError2) {
            _context5.next = 24;
            break;
          }

          throw _iteratorError2;

        case 24:
          return _context5.finish(21);

        case 25:
          return _context5.finish(18);

        case 26:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked5, this, [[3, 14, 18, 26], [19,, 21, 25]]);
}

function recordInstance(address, binary) {
  return _regenerator2.default.wrap(function recordInstance$(_context6) {
    while (1) {
      switch (_context6.prev = _context6.next) {
        case 0:
          return _context6.delegateYield(evm.addInstance(address, binary), "t0", 1);

        case 1:
        case "end":
          return _context6.stop();
      }
    }
  }, _marked6, this);
}

function ready() {
  return _regenerator2.default.wrap(function ready$(_context7) {
    while (1) {
      switch (_context7.prev = _context7.next) {
        case 0:
          _context7.next = 2;
          return (0, _effects.put)(actions.ready());

        case 2:
        case "end":
          return _context7.stop();
      }
    }
  }, _marked7, this);
}

function error(err) {
  return _regenerator2.default.wrap(function error$(_context8) {
    while (1) {
      switch (_context8.prev = _context8.next) {
        case 0:
          _context8.next = 2;
          return (0, _effects.put)(actions.error(err));

        case 2:
        case "end":
          return _context8.stop();
      }
    }
  }, _marked8, this);
}

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _getIterator2 = __webpack_require__(15);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

exports.visitAll = visitAll;
exports.saga = saga;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _effects = __webpack_require__(10);

var _helpers = __webpack_require__(6);

var _sagas = __webpack_require__(31);

var data = _interopRequireWildcard(_sagas);

var _actions = __webpack_require__(56);

var actions = _interopRequireWildcard(_actions);

var _selectors = __webpack_require__(16);

var _selectors2 = _interopRequireDefault(_selectors);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/_regenerator2.default.mark(walk),
    _marked2 = /*#__PURE__*/_regenerator2.default.mark(handleEnter),
    _marked3 = /*#__PURE__*/_regenerator2.default.mark(handleExit),
    _marked4 = /*#__PURE__*/_regenerator2.default.mark(walkSaga),
    _marked5 = /*#__PURE__*/_regenerator2.default.mark(visitAll),
    _marked6 = /*#__PURE__*/_regenerator2.default.mark(saga);

var debug = (0, _debug2.default)("debugger:ast:sagas");

function walk(sourceId, node) {
  var pointer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
  var parentId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _ref, _ref2, i, child, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _ref3, _ref4, key, _child;

  return _regenerator2.default.wrap(function walk$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          debug("walking %o %o", pointer, node);

          return _context.delegateYield(handleEnter(sourceId, node, pointer, parentId), "t0", 2);

        case 2:
          if (!(node instanceof Array)) {
            _context.next = 34;
            break;
          }

          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 6;
          _iterator = (0, _getIterator3.default)(node.entries());

        case 8:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 18;
            break;
          }

          _ref = _step.value;
          _ref2 = (0, _slicedToArray3.default)(_ref, 2);
          i = _ref2[0];
          child = _ref2[1];
          _context.next = 15;
          return (0, _effects.call)(walk, sourceId, child, pointer + "/" + i, parentId);

        case 15:
          _iteratorNormalCompletion = true;
          _context.next = 8;
          break;

        case 18:
          _context.next = 24;
          break;

        case 20:
          _context.prev = 20;
          _context.t1 = _context["catch"](6);
          _didIteratorError = true;
          _iteratorError = _context.t1;

        case 24:
          _context.prev = 24;
          _context.prev = 25;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 27:
          _context.prev = 27;

          if (!_didIteratorError) {
            _context.next = 30;
            break;
          }

          throw _iteratorError;

        case 30:
          return _context.finish(27);

        case 31:
          return _context.finish(24);

        case 32:
          _context.next = 64;
          break;

        case 34:
          if (!(node instanceof Object)) {
            _context.next = 64;
            break;
          }

          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context.prev = 38;
          _iterator2 = (0, _getIterator3.default)((0, _entries2.default)(node));

        case 40:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context.next = 50;
            break;
          }

          _ref3 = _step2.value;
          _ref4 = (0, _slicedToArray3.default)(_ref3, 2);
          key = _ref4[0];
          _child = _ref4[1];
          _context.next = 47;
          return (0, _effects.call)(walk, sourceId, _child, pointer + "/" + key, node.id);

        case 47:
          _iteratorNormalCompletion2 = true;
          _context.next = 40;
          break;

        case 50:
          _context.next = 56;
          break;

        case 52:
          _context.prev = 52;
          _context.t2 = _context["catch"](38);
          _didIteratorError2 = true;
          _iteratorError2 = _context.t2;

        case 56:
          _context.prev = 56;
          _context.prev = 57;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 59:
          _context.prev = 59;

          if (!_didIteratorError2) {
            _context.next = 62;
            break;
          }

          throw _iteratorError2;

        case 62:
          return _context.finish(59);

        case 63:
          return _context.finish(56);

        case 64:
          return _context.delegateYield(handleExit(sourceId, node, pointer), "t3", 65);

        case 65:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, this, [[6, 20, 24, 32], [25,, 27, 31], [38, 52, 56, 64], [57,, 59, 63]]);
}

function handleEnter(sourceId, node, pointer, parentId) {
  return _regenerator2.default.wrap(function handleEnter$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          if (node instanceof Object) {
            _context2.next = 2;
            break;
          }

          return _context2.abrupt("return");

        case 2:

          debug("entering %s", pointer);

          if (!(node.id !== undefined)) {
            _context2.next = 6;
            break;
          }

          debug("%s recording scope %s", pointer, node.id);
          return _context2.delegateYield(data.scope(node.id, pointer, parentId, sourceId), "t0", 6);

        case 6:
          _context2.t1 = node.nodeType;
          _context2.next = _context2.t1 === "VariableDeclaration" ? 9 : 12;
          break;

        case 9:
          debug("%s recording variable %o", pointer, node);
          return _context2.delegateYield(data.declare(node), "t2", 11);

        case 11:
          return _context2.abrupt("break", 12);

        case 12:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

function handleExit(sourceId, node, pointer) {
  return _regenerator2.default.wrap(function handleExit$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          debug("exiting %s", pointer);

          // no-op right now

        case 1:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3, this);
}

function walkSaga(_ref5) {
  var sourceId = _ref5.sourceId,
      ast = _ref5.ast;
  return _regenerator2.default.wrap(function walkSaga$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return walk(sourceId, ast);

        case 2:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4, this);
}

function visitAll(idx) {
  var sources, tasks;
  return _regenerator2.default.wrap(function visitAll$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return (0, _effects.select)(_selectors2.default.views.sources);

        case 2:
          sources = _context5.sent;
          _context5.next = 5;
          return (0, _effects.all)((0, _entries2.default)(sources).filter(function (_ref6) {
            var _ref7 = (0, _slicedToArray3.default)(_ref6, 2),
                id = _ref7[0],
                ast = _ref7[1].ast;

            return !!ast;
          }).map(function (_ref8) {
            var _ref9 = (0, _slicedToArray3.default)(_ref8, 2),
                id = _ref9[0],
                ast = _ref9[1].ast;

            return (0, _effects.fork)(function () {
              return (0, _effects.put)(actions.visit(id, ast));
            });
          }));

        case 5:
          tasks = _context5.sent;

          if (!(tasks.length > 0)) {
            _context5.next = 9;
            break;
          }

          _context5.next = 9;
          return _effects.join.apply(undefined, (0, _toConsumableArray3.default)(tasks));

        case 9:
          _context5.next = 11;
          return (0, _effects.put)(actions.doneVisiting());

        case 11:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked5, this);
}

function saga() {
  return _regenerator2.default.wrap(function saga$(_context6) {
    while (1) {
      switch (_context6.prev = _context6.next) {
        case 0:
          _context6.next = 2;
          return (0, _effects.race)({
            visitor: (0, _effects.takeEvery)(actions.VISIT, walkSaga),
            done: (0, _effects.take)(actions.DONE_VISITING)
          });

        case 2:
        case "end":
          return _context6.stop();
      }
    }
  }, _marked6, this);
}

exports.default = (0, _helpers.prefixName)("ast", saga);

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends2 = __webpack_require__(9);

var _extends3 = _interopRequireDefault(_extends2);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.read = read;
exports.decodeValue = decodeValue;
exports.decodeMemoryReference = decodeMemoryReference;
exports.decodeStorageReference = decodeStorageReference;
exports.default = decode;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _bignumber = __webpack_require__(19);

var _memory = __webpack_require__(54);

var memory = _interopRequireWildcard(_memory);

var _storage = __webpack_require__(55);

var storage = _interopRequireWildcard(_storage);

var _utils = __webpack_require__(14);

var utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:data:decode");

function read(pointer, state) {
  if (pointer.stack != undefined && state.stack && pointer.stack < state.stack.length) {
    return state.stack[pointer.stack];
  } else if (pointer.storage != undefined && state.storage) {
    return storage.readRange(state.storage, pointer.storage);
  } else if (pointer.memory != undefined && state.memory) {
    return memory.readBytes(state.memory, pointer.memory.start, pointer.memory.length);
  } else if (pointer.literal) {
    return pointer.literal;
  }
}

function decodeValue(definition, pointer, state) {
  var bytes = read(pointer, state);
  if (!bytes) {
    return undefined;
  }

  switch (utils.typeClass(definition)) {
    case "bool":
      return !utils.toBigNumber(bytes).isZero();

    case "uint":
      return utils.toBigNumber(bytes);

    case "int":
      return utils.toSignedBigNumber(bytes);

    case "address":
      return utils.toHexString(bytes, true);

    case "bytes":
      debug("typeIdentifier %s %o", utils.typeIdentifier(definition), bytes);
      var length = utils.specifiedSize(definition);
      return utils.toHexString(bytes, length);

    case "string":
      debug("typeIdentifier %s %o", utils.typeIdentifier(definition), bytes);
      return String.fromCharCode.apply(null, bytes);

    default:
      debug("Unknown value type: %s", utils.typeIdentifier(definition));
      return null;
  }
}

function decodeMemoryReference(definition, pointer, state) {
  for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    args[_key - 3] = arguments[_key];
  }

  var rawValue = utils.toBigNumber(read(pointer, state)).toNumber();

  var bytes;
  switch (utils.typeClass(definition)) {

    case "bytes":
    case "string":
      bytes = read({
        memory: { start: rawValue, length: _utils.WORD_SIZE }
      }, state); // bytes contain length

      return decodeValue.apply(undefined, [definition, {
        memory: { start: rawValue + _utils.WORD_SIZE, length: bytes }
      }, state].concat(args));

    case "array":
      bytes = utils.toBigNumber(read({
        memory: { start: rawValue, length: _utils.WORD_SIZE }
      }, state)).toNumber(); // bytes contain array length

      bytes = read({ memory: {
          start: rawValue + _utils.WORD_SIZE, length: bytes * _utils.WORD_SIZE
        } }, state); // now bytes contain items

      return memory.chunk(bytes, _utils.WORD_SIZE).map(function (chunk) {
        return decode.apply(undefined, [utils.baseDefinition(definition), {
          literal: chunk
        }, state].concat(args));
      });

    case "struct":
      var refs = args[0];

      var structDefinition = refs[definition.typeName.referencedDeclaration];
      var structVariables = structDefinition.variables || [];

      return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)(structVariables.map(function (_ref, i) {
        var name = _ref.name,
            id = _ref.id;

        var memberDefinition = refs[id].definition;
        var memberPointer = {
          memory: { start: rawValue + i * _utils.WORD_SIZE, length: _utils.WORD_SIZE }
        };
        // let memberPointer = memory.read(state.memory, pointer + i * WORD_SIZE);

        // HACK
        memberDefinition = (0, _extends3.default)({}, memberDefinition, {

          typeDescriptions: (0, _extends3.default)({}, memberDefinition.typeDescriptions, {

            typeIdentifier: memberDefinition.typeDescriptions.typeIdentifier.replace(/_storage_/g, "_memory_")
          })
        });

        return (0, _defineProperty3.default)({}, name, decode.apply(undefined, [memberDefinition, memberPointer, state].concat(args)));
      }))));

    default:
      debug("Unknown memory reference type: %s", utils.typeIdentifier(definition));
      return null;

  }
}

function decodeStorageReference(definition, pointer, state) {
  for (var _len2 = arguments.length, args = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
    args[_key2 - 3] = arguments[_key2];
  }

  var data;
  var bytes;
  var length;
  var slot;

  switch (utils.typeClass(definition)) {
    case "array":
      debug("storage array! %o", pointer);
      data = read(pointer, state);
      if (!data) {
        return null;
      }

      length = utils.toBigNumber(data).toNumber();
      debug("length %o", length);

      var baseSize = utils.storageSize(utils.baseDefinition(definition));
      var perWord = Math.floor(_utils.WORD_SIZE / baseSize);
      debug("baseSize %o", baseSize);
      debug("perWord %d", perWord);

      var offset = function offset(i) {
        if (perWord == 1) {
          return i;
        }

        return Math.floor(i * baseSize / _utils.WORD_SIZE);
      };

      var index = function index(i) {
        if (perWord == 1) {
          return _utils.WORD_SIZE - baseSize;
        }

        var position = perWord - i % perWord - 1;
        return position * baseSize;
      };

      debug("pointer: %o", pointer);
      return [].concat((0, _toConsumableArray3.default)(Array(length).keys())).map(function (i) {
        var childFrom = pointer.storage.from.offset != undefined ? {
          slot: ["0x" + utils.toBigNumber(utils.keccak256.apply(utils, (0, _toConsumableArray3.default)(pointer.storage.from.slot))).plus(pointer.storage.from.offset).toString(16)],
          offset: offset(i),
          index: index(i)
        } : {
          slot: [pointer.storage.from.slot],
          offset: offset(i),
          index: index(i)
        };
        return childFrom;
      }).map(function (childFrom, idx) {
        debug("childFrom %d, %o", idx, childFrom);
        return decode.apply(undefined, [utils.baseDefinition(definition), { storage: {
            from: childFrom,
            length: baseSize
          } }, state].concat(args));
      });

    case "bytes":
    case "string":
      data = read(pointer, state);
      if (!data) {
        return null;
      }

      if (data[_utils.WORD_SIZE - 1] % 2 == 0) {
        // string lives in word, length is last byte / 2
        length = data[_utils.WORD_SIZE - 1] / 2;
        debug("in-word; length %o", length);
        if (length == 0) {
          return "";
        }

        return decodeValue.apply(undefined, [definition, { storage: {
            from: { slot: pointer.storage.from.slot, index: 0 },
            to: { slot: pointer.storage.from.slot, index: length - 1 }
          } }, state].concat(args));
      } else {
        length = utils.toBigNumber(data).minus(1).div(2).toNumber();
        debug("new-word, length %o", length);

        return decodeValue.apply(undefined, [definition, { storage: {
            from: { slot: [pointer.storage.from.slot], index: 0 },
            length: length
          } }, state].concat(args));
      }

    case "struct":
      var refs = args[0];


      return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(pointer.storage.children).map(function (_ref3) {
        var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),
            id = _ref4[0],
            childPointer = _ref4[1];

        return (0, _defineProperty3.default)({}, childPointer.name, decode.apply(undefined, [refs[id].definition, { storage: childPointer }, state].concat(args)));
      }))));

    default:
      debug("Unknown storage reference type: %s", utils.typeIdentifier(definition));
      return undefined;
  }
}

function decode(definition) {
  for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }

  if (!utils.isReference(definition)) {
    return decodeValue.apply(undefined, [definition].concat(args));
  }

  switch (utils.referenceType(definition)) {
    case "memory":
      return decodeMemoryReference.apply(undefined, [definition].concat(args));
    case "storage":
      return decodeStorageReference.apply(undefined, [definition].concat(args));
    default:
      debug("Unknown reference category: %s", utils.typeIdentifier(definition));
      return undefined;
  }
}

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.read = read;
exports.readBytes = readBytes;
exports.chunk = chunk;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _bignumber = __webpack_require__(19);

var _utils = __webpack_require__(14);

var utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:data:decode:memory");

/**
 * read word from memory
 *
 * requires `byte` to be a multiple of WORD_SIZE (32)
 *
 * @param memory - Uint8Array
 * @return {BigNumber}
 */
function read(memory, byte) {
  return readBytes(memory, byte, _utils.WORD_SIZE);
}

/**
 * read <bytes> amount of bytes from memory, starting at byte <start>
 *
 * @param memory - Uint8Array
 */
function readBytes(memory, byte, length) {
  byte = utils.toBigNumber(byte);
  length = utils.toBigNumber(length);

  if (byte.toNumber() >= memory.length) {
    return new Uint8Array(length ? length.toNumber() : 0);
  }

  if (length == undefined) {
    return new Uint8Array(memory.buffer, byte.toNumber());
  }

  // grab `length` bytes no matter what, here fill this array
  var bytes = new Uint8Array(length.toNumber());

  // if we're reading past the end of memory, truncate the length to read
  var excess = byte.plus(length).minus(memory.length).toNumber();
  if (excess > 0) {
    length = new _bignumber.BigNumber(memory.length).minus(byte);
  }

  var existing = new Uint8Array(memory.buffer, byte.toNumber(), length.toNumber());

  bytes.set(existing);

  return bytes;
}

/**
 * Split memory into chunks
 */
function chunk(memory) {
  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _utils.WORD_SIZE;

  var chunks = [];

  for (var i = 0; i < memory.length; i += size) {
    var _chunk = readBytes(memory, i, size);
    chunks.push(_chunk);
  }

  return chunks;
}

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(9);

var _extends3 = _interopRequireDefault(_extends2);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.read = read;
exports.readRange = readRange;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _utils = __webpack_require__(14);

var utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:data:decode:storage");

/**
 * read slot from storage
 *
 * @param slot - big number or array of regular numbers
 * @param offset - for array, offset from the keccak determined location
 */
function read(storage, slot) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

  if (slot instanceof Array) {
    slot = utils.keccak256.apply(utils, (0, _toConsumableArray3.default)(slot.map(utils.toBigNumber)));
  }

  slot = utils.toBigNumber(slot).plus(offset);

  debug("reading slot: %o", utils.toHexString(slot));

  var word = storage[utils.toHexString(slot, _utils.WORD_SIZE)] || new Uint8Array(_utils.WORD_SIZE);

  debug("word %o", word);
  return word;
}

/**
 * read all bytes in some range.
 *
 * parameters `from` and `to` are objects with the following properties:
 *
 *   slot - (required) either a bignumber or a "path" array of integer offsets
 *
 *     path array values get converted into keccak256 hash as per solidity
 *     storage allocation method
 *
 *     ref: https://solidity.readthedocs.io/en/v0.4.23/miscellaneous.html#layout-of-state-variables-in-storage
 *     (search "concatenation")
 *
 *  offset - (default: 0) slot offset
 *
 *  index - (default: 0) byte index in word
 *
 * @param from - location (see ^)
 * @param to - location (see ^). inclusive.
 * @param length - instead of `to`, number of bytes after `from`
 */
function readRange(storage, _ref) {
  var from = _ref.from,
      to = _ref.to,
      length = _ref.length;

  if (!length && !to || length && to) {
    throw new Error("must specify exactly one `to`|`length`");
  }

  from = (0, _extends3.default)({}, from, {
    offset: from.offset || 0
  });

  if (length) {
    to = {
      slot: from.slot,
      offset: from.offset + Math.floor((from.index + length - 1) / _utils.WORD_SIZE),
      index: (from.index + length - 1) % _utils.WORD_SIZE
    };
  } else {
    to = (0, _extends3.default)({}, to, {
      offset: to.offset || 0
    });
  }

  debug("readRange %o", { from: from, to: to });

  var totalWords = to.offset - from.offset + 1;
  debug("totalWords %o", totalWords);

  var data = new Uint8Array(totalWords * _utils.WORD_SIZE);

  for (var i = 0; i < totalWords; i++) {
    var offset = i + from.offset;
    data.set(read(storage, from.slot, offset), i * _utils.WORD_SIZE);
  }
  debug("words %o", data);

  data = data.slice(from.index, (totalWords - 1) * _utils.WORD_SIZE + to.index + 1);

  debug("data: %o", data);

  return data;
}

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.visit = visit;
exports.doneVisiting = doneVisiting;
var VISIT = exports.VISIT = "VISIT";
function visit(sourceId, ast) {
  return {
    type: VISIT,
    sourceId: sourceId, ast: ast
  };
}

var DONE_VISITING = exports.DONE_VISITING = "DONE_VISITING";
function doneVisiting() {
  return {
    type: DONE_VISITING
  };
}

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _keys = __webpack_require__(23);

var _keys2 = _interopRequireDefault(_keys);

var _set = __webpack_require__(25);

var _set2 = _interopRequireDefault(_set);

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _CONTROL_SAGAS;

exports.saga = saga;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _effects = __webpack_require__(10);

var _helpers = __webpack_require__(6);

var _sagas = __webpack_require__(34);

var trace = _interopRequireWildcard(_sagas);

var _actions = __webpack_require__(29);

var actions = _interopRequireWildcard(_actions);

var _selectors = __webpack_require__(58);

var _selectors2 = _interopRequireDefault(_selectors);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/_regenerator2.default.mark(saga),
    _marked2 = /*#__PURE__*/_regenerator2.default.mark(advance),
    _marked3 = /*#__PURE__*/_regenerator2.default.mark(stepNext),
    _marked4 = /*#__PURE__*/_regenerator2.default.mark(stepInto),
    _marked5 = /*#__PURE__*/_regenerator2.default.mark(stepOut),
    _marked6 = /*#__PURE__*/_regenerator2.default.mark(stepOver),
    _marked7 = /*#__PURE__*/_regenerator2.default.mark(continueUntil);

var debug = (0, _debug2.default)("debugger:controller:sagas");

var CONTROL_SAGAS = (_CONTROL_SAGAS = {}, (0, _defineProperty3.default)(_CONTROL_SAGAS, actions.ADVANCE, advance), (0, _defineProperty3.default)(_CONTROL_SAGAS, actions.STEP_NEXT, stepNext), (0, _defineProperty3.default)(_CONTROL_SAGAS, actions.STEP_OVER, stepOver), (0, _defineProperty3.default)(_CONTROL_SAGAS, actions.STEP_INTO, stepInto), (0, _defineProperty3.default)(_CONTROL_SAGAS, actions.STEP_OUT, stepOut), (0, _defineProperty3.default)(_CONTROL_SAGAS, actions.CONTINUE_UNTIL, continueUntil), _CONTROL_SAGAS);

/** AST node types that are skipped to filter out some noise */
var SKIPPED_TYPES = new _set2.default(["ContractDefinition", "VariableDeclaration"]);

function saga() {
  var action, _saga;

  return _regenerator2.default.wrap(function saga$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (false) {
            _context.next = 13;
            break;
          }

          debug("waiting for control action");
          _context.next = 4;
          return (0, _effects.take)((0, _keys2.default)(CONTROL_SAGAS));

        case 4:
          action = _context.sent;

          debug("got control action");
          _saga = CONTROL_SAGAS[action.type];
          _context.next = 9;
          return (0, _effects.put)(actions.beginStep(action.type));

        case 9:
          _context.next = 11;
          return (0, _effects.race)({
            exec: (0, _effects.call)(_saga, action),
            interrupt: (0, _effects.take)(actions.INTERRUPT)
          });

        case 11:
          _context.next = 0;
          break;

        case 13:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, this);
}

exports.default = (0, _helpers.prefixName)("controller", saga);

/**
 * Advance the state by one instruction
 */

function advance() {
  return _regenerator2.default.wrap(function advance$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.delegateYield(trace.advance(), "t0", 1);

        case 1:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

/**
 * stepNext - step to the next logical code segment
 *
 * Note: It might take multiple instructions to express the same section of code.
 * "Stepping", then, is stepping to the next logical item, not stepping to the next
 * instruction. See advance() if you'd like to advance by one instruction.
 */
function stepNext() {
  var startingRange, upcoming;
  return _regenerator2.default.wrap(function stepNext$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, _effects.select)(_selectors2.default.current.location.sourceRange);

        case 2:
          startingRange = _context3.sent;

        case 3:
          return _context3.delegateYield(advance(), "t0", 4);

        case 4:
          _context3.next = 6;
          return (0, _effects.select)(_selectors2.default.current.location);

        case 6:
          upcoming = _context3.sent;

        case 7:
          if (!upcoming.node || SKIPPED_TYPES.has(upcoming.node.nodeType) || upcoming.sourceRange.start == startingRange.start && upcoming.sourceRange.length == startingRange.length) {
            _context3.next = 3;
            break;
          }

        case 8:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3, this);
}

/**
 * stepInto - step into the current function
 *
 * Conceptually this is easy, but from a programming standpoint it's hard.
 * Code like `getBalance(msg.sender)` might be highlighted, but there could
 * be a number of different intermediate steps (like evaluating `msg.sender`)
 * before `getBalance` is stepped into. This function will step into the first
 * function available (where instruction.jump == "i"), ignoring any intermediate
 * steps that fall within the same code range. If there's a step encountered
 * that exists outside of the range, then stepInto will only execute until that
 * step.
 */
function stepInto() {
  var startingDepth, startingRange, currentDepth, currentRange;
  return _regenerator2.default.wrap(function stepInto$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return (0, _effects.select)(_selectors2.default.current.willJump);

        case 2:
          if (!_context4.sent) {
            _context4.next = 5;
            break;
          }

          return _context4.delegateYield(stepNext(), "t0", 4);

        case 4:
          return _context4.abrupt("return");

        case 5:
          _context4.next = 7;
          return (0, _effects.select)(_selectors2.default.current.location.isMultiline);

        case 7:
          if (!_context4.sent) {
            _context4.next = 10;
            break;
          }

          return _context4.delegateYield(stepOver(), "t1", 9);

        case 9:
          return _context4.abrupt("return");

        case 10:
          _context4.next = 12;
          return (0, _effects.select)(_selectors2.default.current.functionDepth);

        case 12:
          startingDepth = _context4.sent;
          _context4.next = 15;
          return (0, _effects.select)(_selectors2.default.current.location.sourceRange);

        case 15:
          startingRange = _context4.sent;

        case 16:
          return _context4.delegateYield(stepNext(), "t2", 17);

        case 17:
          _context4.next = 19;
          return (0, _effects.select)(_selectors2.default.current.functionDepth);

        case 19:
          currentDepth = _context4.sent;
          _context4.next = 22;
          return (0, _effects.select)(_selectors2.default.current.location.sourceRange);

        case 22:
          currentRange = _context4.sent;

        case 23:
          if (
          // the function stack has not increased,
          currentDepth <= startingDepth &&

          // the current source range begins on or after the starting range
          currentRange.start >= startingRange.start &&

          // and the current range ends on or before the starting range ends
          currentRange.start + currentRange.length <= startingRange.start + startingRange.length) {
            _context4.next = 16;
            break;
          }

        case 24:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4, this);
}

/**
 * Step out of the current function
 *
 * This will run until the debugger encounters a decrease in function depth.
 */
function stepOut() {
  var startingDepth, currentDepth;
  return _regenerator2.default.wrap(function stepOut$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return (0, _effects.select)(_selectors2.default.current.location.isMultiline);

        case 2:
          if (!_context5.sent) {
            _context5.next = 5;
            break;
          }

          return _context5.delegateYield(stepOver(), "t0", 4);

        case 4:
          return _context5.abrupt("return");

        case 5:
          _context5.next = 7;
          return (0, _effects.select)(_selectors2.default.current.functionDepth);

        case 7:
          startingDepth = _context5.sent;

        case 8:
          return _context5.delegateYield(stepNext(), "t1", 9);

        case 9:
          _context5.next = 11;
          return (0, _effects.select)(_selectors2.default.current.functionDepth);

        case 11:
          currentDepth = _context5.sent;

        case 12:
          if (currentDepth >= startingDepth) {
            _context5.next = 8;
            break;
          }

        case 13:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked5, this);
}

/**
 * stepOver - step over the current line
 *
 * Step over the current line. This will step to the next instruction that
 * exists on a different line of code within the same function depth.
 */
function stepOver() {
  var startingDepth, startingRange, currentDepth, currentRange;
  return _regenerator2.default.wrap(function stepOver$(_context6) {
    while (1) {
      switch (_context6.prev = _context6.next) {
        case 0:
          _context6.next = 2;
          return (0, _effects.select)(_selectors2.default.current.functionDepth);

        case 2:
          startingDepth = _context6.sent;
          _context6.next = 5;
          return (0, _effects.select)(_selectors2.default.current.location.sourceRange);

        case 5:
          startingRange = _context6.sent;

        case 6:
          return _context6.delegateYield(stepNext(), "t0", 7);

        case 7:
          _context6.next = 9;
          return (0, _effects.select)(_selectors2.default.current.functionDepth);

        case 9:
          currentDepth = _context6.sent;
          _context6.next = 12;
          return (0, _effects.select)(_selectors2.default.current.location.sourceRange);

        case 12:
          currentRange = _context6.sent;

        case 13:
          if (
          // keep stepping provided:
          //
          // we haven't jumped out
          !(currentDepth < startingDepth) && (

          // either: function depth is greater than starting (ignore function calls)
          // or, if we're at the same depth, keep stepping until we're on a new
          // line.
          currentDepth > startingDepth || currentRange.lines.start.line == startingRange.lines.start.line)) {
            _context6.next = 6;
            break;
          }

        case 14:
        case "end":
          return _context6.stop();
      }
    }
  }, _marked6, this);
}

/**
 * continueUntil - step through execution until a breakpoint
 *
 * @param breakpoints - array of breakpoints ({ ...call, line })
 */
function continueUntil(_ref) {
  var breakpoints = _ref.breakpoints;
  var currentCall, currentLocation, breakpointHit;
  return _regenerator2.default.wrap(function continueUntil$(_context7) {
    while (1) {
      switch (_context7.prev = _context7.next) {
        case 0:
          breakpointHit = false;

        case 1:
          return _context7.delegateYield(stepNext(), "t0", 2);

        case 2:
          _context7.next = 4;
          return (0, _effects.select)(_selectors2.default.current.executionContext);

        case 4:
          currentCall = _context7.sent;
          _context7.next = 7;
          return (0, _effects.select)(_selectors2.default.current.location);

        case 7:
          currentLocation = _context7.sent;


          breakpointHit = breakpoints.filter(function (_ref2) {
            var address = _ref2.address,
                binary = _ref2.binary,
                line = _ref2.line,
                node = _ref2.node;
            return (address == currentCall.address || binary == currentCall.binary) && (line == currentLocation.sourceRange.lines.start.line || node == currentLocation.node.id);
          }).length > 0;

        case 9:
          if (!breakpointHit) {
            _context7.next = 1;
            break;
          }

        case 10:
        case "end":
          return _context7.stop();
      }
    }
  }, _marked7, this);
}

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _reselectTree = __webpack_require__(8);

var _selectors = __webpack_require__(11);

var _selectors2 = _interopRequireDefault(_selectors);

var _selectors3 = __webpack_require__(12);

var _selectors4 = _interopRequireDefault(_selectors3);

var _selectors5 = __webpack_require__(16);

var _selectors6 = _interopRequireDefault(_selectors5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:controller:sagas");

/**
 * @private
 */
var identity = function identity(x) {
  return x;
};

/**
 * controller
 */
var controller = (0, _reselectTree.createSelectorTree)({

  /**
   * controller.current
   */
  current: {
    /**
     * controller.current.functionDepth
     */
    functionDepth: (0, _reselectTree.createLeaf)([_selectors4.default.current.functionDepth], identity),

    /**
     * controller.current.executionContext
     */
    executionContext: (0, _reselectTree.createLeaf)([_selectors2.default.current.call], identity),

    /**
     * controller.current.willJump
     */
    willJump: (0, _reselectTree.createLeaf)([_selectors2.default.current.step.isJump], identity),

    /**
     * controller.current.location
     */
    location: {
      /**
       * controller.current.location.sourceRange
       */
      sourceRange: (0, _reselectTree.createLeaf)([_selectors4.default.current.sourceRange], identity),

      /**
       * controller.current.location.node
       */
      node: (0, _reselectTree.createLeaf)([_selectors6.default.current.node], identity),

      /**
       * controller.current.location.isMultiline
       */
      isMultiline: (0, _reselectTree.createLeaf)([_selectors4.default.current.isMultiline], identity)
    }
  }
});

exports.default = controller;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.addSource = addSource;
exports.addSourceMap = addSourceMap;
exports.saga = saga;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _effects = __webpack_require__(10);

var _helpers = __webpack_require__(6);

var _actions = __webpack_require__(35);

var actions = _interopRequireWildcard(_actions);

var _actions2 = __webpack_require__(17);

var _selectors = __webpack_require__(12);

var _selectors2 = _interopRequireDefault(_selectors);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/_regenerator2.default.mark(addSource),
    _marked2 = /*#__PURE__*/_regenerator2.default.mark(addSourceMap),
    _marked3 = /*#__PURE__*/_regenerator2.default.mark(functionDepthSaga),
    _marked4 = /*#__PURE__*/_regenerator2.default.mark(saga);

var debug = (0, _debug2.default)("debugger:solidity:sagas");

function addSource(source, sourcePath, ast) {
  return _regenerator2.default.wrap(function addSource$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, _effects.put)(actions.addSource(source, sourcePath, ast));

        case 2:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, this);
}

function addSourceMap(binary, sourceMap) {
  return _regenerator2.default.wrap(function addSourceMap$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _effects.put)(actions.addSourceMap(binary, sourceMap));

        case 2:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

function functionDepthSaga() {
  var instruction, jumpDirection;
  return _regenerator2.default.wrap(function functionDepthSaga$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          if (false) {
            _context3.next = 18;
            break;
          }

          _context3.next = 3;
          return (0, _effects.take)(_actions2.TICK);

        case 3:
          debug("got TICK");
          _context3.next = 6;
          return (0, _effects.select)(_selectors2.default.current.instruction);

        case 6:
          instruction = _context3.sent;

          debug("instruction: %o", instruction);

          _context3.next = 10;
          return (0, _effects.select)(_selectors2.default.current.willJump);

        case 10:
          if (!_context3.sent) {
            _context3.next = 16;
            break;
          }

          _context3.next = 13;
          return (0, _effects.select)(_selectors2.default.current.jumpDirection);

        case 13:
          jumpDirection = _context3.sent;
          _context3.next = 16;
          return (0, _effects.put)(actions.jump(jumpDirection));

        case 16:
          _context3.next = 0;
          break;

        case 18:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3, this);
}

function saga() {
  return _regenerator2.default.wrap(function saga$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return (0, _effects.call)(functionDepthSaga);

        case 2:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4, this);
}

exports.default = (0, _helpers.prefixName)("solidity", saga);

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.addContext = addContext;
exports.addInstance = addInstance;
exports.begin = begin;
exports.callstackSaga = callstackSaga;
exports.saga = saga;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _effects = __webpack_require__(10);

var _helpers = __webpack_require__(6);

var _actions = __webpack_require__(17);

var _actions2 = __webpack_require__(36);

var actions = _interopRequireWildcard(_actions2);

var _selectors = __webpack_require__(11);

var _selectors2 = _interopRequireDefault(_selectors);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/_regenerator2.default.mark(addContext),
    _marked2 = /*#__PURE__*/_regenerator2.default.mark(addInstance),
    _marked3 = /*#__PURE__*/_regenerator2.default.mark(begin),
    _marked4 = /*#__PURE__*/_regenerator2.default.mark(callstackSaga),
    _marked5 = /*#__PURE__*/_regenerator2.default.mark(saga);

var debug = (0, _debug2.default)("debugger:evm:sagas");

/**
 * Adds EVM bytecode context
 *
 * @return {string} ID (0x-prefixed keccak of binary)
 */
function addContext(contractName, binary) {
  return _regenerator2.default.wrap(function addContext$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0, _effects.put)(actions.addContext(contractName, binary));

        case 2:
          return _context.abrupt("return", (0, _helpers.keccak256)(binary));

        case 3:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, this);
}

/**
 * Adds known deployed instance of binary at address
 *
 * @return {string} ID (0x-prefixed keccak of binary)
 */
function addInstance(address, binary) {
  var search, _search, context;

  return _regenerator2.default.wrap(function addInstance$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0, _effects.select)(_selectors2.default.info.binaries.search);

        case 2:
          search = _context2.sent;
          _search = search(binary), context = _search.context;
          _context2.next = 6;
          return (0, _effects.put)(actions.addInstance(address, context, binary));

        case 6:
          return _context2.abrupt("return", context);

        case 7:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

function begin(_ref) {
  var address = _ref.address,
      binary = _ref.binary;
  return _regenerator2.default.wrap(function begin$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          if (!address) {
            _context3.next = 5;
            break;
          }

          _context3.next = 3;
          return (0, _effects.put)(actions.call(address));

        case 3:
          _context3.next = 7;
          break;

        case 5:
          _context3.next = 7;
          return (0, _effects.put)(actions.create(binary));

        case 7:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3, this);
}

function callstackSaga() {
  var address, binary;
  return _regenerator2.default.wrap(function callstackSaga$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          if (false) {
            _context4.next = 34;
            break;
          }

          _context4.next = 3;
          return (0, _effects.take)(_actions.TICK);

        case 3:
          debug("got TICK");

          _context4.next = 6;
          return (0, _effects.select)(_selectors2.default.current.step.isCall);

        case 6:
          if (!_context4.sent) {
            _context4.next = 15;
            break;
          }

          debug("got call");
          _context4.next = 10;
          return (0, _effects.select)(_selectors2.default.current.step.callAddress);

        case 10:
          address = _context4.sent;
          _context4.next = 13;
          return (0, _effects.put)(actions.call(address));

        case 13:
          _context4.next = 32;
          break;

        case 15:
          _context4.next = 17;
          return (0, _effects.select)(_selectors2.default.current.step.isCreate);

        case 17:
          if (!_context4.sent) {
            _context4.next = 26;
            break;
          }

          debug("got create");
          _context4.next = 21;
          return (0, _effects.select)(_selectors2.default.current.step.createBinary);

        case 21:
          binary = _context4.sent;
          _context4.next = 24;
          return (0, _effects.put)(actions.create(binary));

        case 24:
          _context4.next = 32;
          break;

        case 26:
          _context4.next = 28;
          return (0, _effects.select)(_selectors2.default.current.step.isHalting);

        case 28:
          if (!_context4.sent) {
            _context4.next = 32;
            break;
          }

          debug("got return");
          _context4.next = 32;
          return (0, _effects.put)(actions.returnCall());

        case 32:
          _context4.next = 0;
          break;

        case 34:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4, this);
}

function saga() {
  return _regenerator2.default.wrap(function saga$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return (0, _effects.call)(callstackSaga);

        case 2:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked5, this);
}

exports.default = (0, _helpers.prefixName)("evm", saga);

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.inspectTransaction = inspectTransaction;
exports.obtainBinaries = obtainBinaries;
exports.saga = saga;

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _effects = __webpack_require__(10);

var _helpers = __webpack_require__(6);

var _actions = __webpack_require__(62);

var actions = _interopRequireWildcard(_actions);

var _adapter = __webpack_require__(63);

var _adapter2 = _interopRequireDefault(_adapter);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/_regenerator2.default.mark(fetchTransactionInfo),
    _marked2 = /*#__PURE__*/_regenerator2.default.mark(fetchBinary),
    _marked3 = /*#__PURE__*/_regenerator2.default.mark(inspectTransaction),
    _marked4 = /*#__PURE__*/_regenerator2.default.mark(obtainBinaries),
    _marked5 = /*#__PURE__*/_regenerator2.default.mark(receiveBinary),
    _marked6 = /*#__PURE__*/_regenerator2.default.mark(saga);

var debug = (0, _debug2.default)("debugger:web3:sagas");

function fetchTransactionInfo(adapter, _ref) {
  var txHash = _ref.txHash;
  var trace, tx, receipt;
  return _regenerator2.default.wrap(function fetchTransactionInfo$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          debug("inspecting transaction");
          _context.prev = 1;
          _context.next = 4;
          return (0, _effects.apply)(adapter, adapter.getTrace, [txHash]);

        case 4:
          trace = _context.sent;
          _context.next = 13;
          break;

        case 7:
          _context.prev = 7;
          _context.t0 = _context["catch"](1);

          debug("putting error");
          _context.next = 12;
          return (0, _effects.put)(actions.error(_context.t0));

        case 12:
          return _context.abrupt("return");

        case 13:

          debug("got trace");
          _context.next = 16;
          return (0, _effects.put)(actions.receiveTrace(trace));

        case 16:
          _context.next = 18;
          return (0, _effects.apply)(adapter, adapter.getTransaction, [txHash]);

        case 18:
          tx = _context.sent;

          if (!(tx.to && tx.to != "0x0")) {
            _context.next = 23;
            break;
          }

          _context.next = 22;
          return (0, _effects.put)(actions.receiveCall({ address: tx.to }));

        case 22:
          return _context.abrupt("return");

        case 23:
          _context.next = 25;
          return (0, _effects.apply)(adapter, adapter.getReceipt, [txHash]);

        case 25:
          receipt = _context.sent;

          if (!receipt.contractAddress) {
            _context.next = 30;
            break;
          }

          _context.next = 29;
          return (0, _effects.put)(actions.receiveCall({ binary: tx.input }));

        case 29:
          return _context.abrupt("return");

        case 30:
          throw new Error("Could not find contract associated with transaction. " + "Please make sure you're debugging a transaction that executes a " + "contract function or creates a new contract.");

        case 31:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, this, [[1, 7]]);
}

function fetchBinary(adapter, _ref2) {
  var address = _ref2.address;
  var binary;
  return _regenerator2.default.wrap(function fetchBinary$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          debug("fetching binary for %s", address);
          _context2.next = 3;
          return (0, _effects.apply)(adapter, adapter.getDeployedCode, [address]);

        case 3:
          binary = _context2.sent;


          debug("received binary for %s", address);
          _context2.next = 7;
          return (0, _effects.put)(actions.receiveBinary(address, binary));

        case 7:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2, this);
}

function inspectTransaction(txHash, provider) {
  var action, trace, _ref4, address, binary;

  return _regenerator2.default.wrap(function inspectTransaction$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return (0, _effects.put)(actions.init(provider));

        case 2:
          _context3.next = 4;
          return (0, _effects.put)(actions.inspect(txHash));

        case 4:
          _context3.next = 6;
          return (0, _effects.take)(function (_ref3) {
            var type = _ref3.type;
            return type == actions.RECEIVE_TRACE || type == actions.ERROR_WEB3;
          });

        case 6:
          action = _context3.sent;

          debug("action %o", action);

          if (!(action.type == actions.RECEIVE_TRACE)) {
            _context3.next = 13;
            break;
          }

          trace = action.trace;
          debug("received trace");
          _context3.next = 14;
          break;

        case 13:
          return _context3.abrupt("return", { error: action.error });

        case 14:
          _context3.next = 16;
          return (0, _effects.take)(actions.RECEIVE_CALL);

        case 16:
          _ref4 = _context3.sent;
          address = _ref4.address;
          binary = _ref4.binary;

          debug("received call");

          return _context3.abrupt("return", { trace: trace, address: address, binary: binary });

        case 21:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3, this);
}

function obtainBinaries(addresses) {
  var tasks, binaries;
  return _regenerator2.default.wrap(function obtainBinaries$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return (0, _effects.all)(addresses.map(function (address) {
            return (0, _effects.fork)(receiveBinary, address);
          }));

        case 2:
          tasks = _context4.sent;


          debug("requesting binaries");
          _context4.next = 6;
          return (0, _effects.all)(addresses.map(function (address) {
            return (0, _effects.put)(actions.fetchBinary(address));
          }));

        case 6:
          binaries = [];
          _context4.next = 9;
          return (0, _effects.all)(tasks.map(function (task) {
            return (0, _effects.join)(task);
          }));

        case 9:
          binaries = _context4.sent;


          debug("binaries %o", binaries);

          return _context4.abrupt("return", binaries);

        case 12:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4, this);
}

function receiveBinary(address) {
  var _ref5, binary;

  return _regenerator2.default.wrap(function receiveBinary$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return (0, _effects.take)(function (action) {
            return action.type == actions.RECEIVE_BINARY && action.address == address;
          });

        case 2:
          _ref5 = _context5.sent;
          binary = _ref5.binary;

          debug("got binary for %s", address);

          return _context5.abrupt("return", binary);

        case 6:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked5, this);
}

function saga() {
  var _ref6, provider, adapter;

  return _regenerator2.default.wrap(function saga$(_context6) {
    while (1) {
      switch (_context6.prev = _context6.next) {
        case 0:
          _context6.next = 2;
          return (0, _effects.take)(actions.INIT_WEB3);

        case 2:
          _ref6 = _context6.sent;
          provider = _ref6.provider;
          adapter = new _adapter2.default(provider);
          _context6.next = 7;
          return (0, _effects.takeEvery)(actions.INSPECT, fetchTransactionInfo, adapter);

        case 7:
          _context6.next = 9;
          return (0, _effects.takeEvery)(actions.FETCH_BINARY, fetchBinary, adapter);

        case 9:
        case "end":
          return _context6.stop();
      }
    }
  }, _marked6, this);
}

exports.default = (0, _helpers.prefixName)("web3", saga);

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.init = init;
exports.inspect = inspect;
exports.fetchBinary = fetchBinary;
exports.receiveBinary = receiveBinary;
exports.receiveTrace = receiveTrace;
exports.receiveCall = receiveCall;
exports.error = error;
var INIT_WEB3 = exports.INIT_WEB3 = "INIT_WEB3";
function init(provider) {
  return {
    type: INIT_WEB3,
    provider: provider
  };
}

var INSPECT = exports.INSPECT = "INSPECT_TRANSACTION";
function inspect(txHash) {
  return {
    type: INSPECT,
    txHash: txHash
  };
}

var FETCH_BINARY = exports.FETCH_BINARY = "FETCH_BINARY";
function fetchBinary(address) {
  return {
    type: FETCH_BINARY,
    address: address
  };
}

var RECEIVE_BINARY = exports.RECEIVE_BINARY = "RECEIVE_BINARY";
function receiveBinary(address, binary) {
  return {
    type: RECEIVE_BINARY,
    address: address, binary: binary
  };
}

var RECEIVE_TRACE = exports.RECEIVE_TRACE = "RECEIVE_TRACE";
function receiveTrace(trace) {
  return {
    type: RECEIVE_TRACE,
    trace: trace
  };
}

var RECEIVE_CALL = exports.RECEIVE_CALL = "RECEIVE_CALL";
function receiveCall(_ref) {
  var address = _ref.address,
      binary = _ref.binary;

  return {
    type: RECEIVE_CALL,
    address: address, binary: binary
  };
}

var ERROR_WEB3 = exports.ERROR_WEB3 = "ERROR_WEB3";
function error(error) {
  return {
    type: ERROR_WEB3,
    error: error
  };
}

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(4);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = __webpack_require__(28);

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = __webpack_require__(26);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(20);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(21);

var _createClass3 = _interopRequireDefault(_createClass2);

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _web = __webpack_require__(30);

var _web2 = _interopRequireDefault(_web);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:web3:adapter");

var Web3Adapter = function () {
  function Web3Adapter(provider) {
    (0, _classCallCheck3.default)(this, Web3Adapter);

    this.web3 = new _web2.default(provider);
  }

  (0, _createClass3.default)(Web3Adapter, [{
    key: "getTrace",
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(txHash) {
        var _this = this;

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", new _promise2.default(function (accept, reject) {
                  _this.web3.currentProvider.sendAsync({
                    jsonrpc: "2.0",
                    method: "debug_traceTransaction",
                    params: [txHash, {}],
                    id: new Date().getTime()
                  }, function (err, result) {
                    if (err) return reject(err);
                    if (result.error) return reject(new Error(result.error.message));
                    debug("result: %o", result);
                    accept(result.result.structLogs);
                  });
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getTrace(_x) {
        return _ref.apply(this, arguments);
      }

      return getTrace;
    }()
  }, {
    key: "getTransaction",
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(txHash) {
        var _this2 = this;

        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", new _promise2.default(function (accept, reject) {
                  _this2.web3.eth.getTransaction(txHash, function (err, tx) {
                    if (err) return reject(err);

                    return accept(tx);
                  });
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getTransaction(_x2) {
        return _ref2.apply(this, arguments);
      }

      return getTransaction;
    }()
  }, {
    key: "getReceipt",
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(txHash) {
        var _this3 = this;

        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", new _promise2.default(function (accept, reject) {
                  _this3.web3.eth.getTransactionReceipt(txHash, function (err, receipt) {
                    if (err) return reject(err);

                    return accept(receipt);
                  });
                }));

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getReceipt(_x3) {
        return _ref3.apply(this, arguments);
      }

      return getReceipt;
    }()
  }, {
    key: "getDeployedCode",


    /**
     * getDeployedCode - get the deployed code for an address from the client
     * @param  {String} address
     * @return {String}         deployedBinary
     */
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(address) {
        var _this4 = this;

        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                debug("getting deployed code for %s", address);
                return _context4.abrupt("return", new _promise2.default(function (accept, reject) {
                  _this4.web3.eth.getCode(address, function (err, deployedBinary) {
                    if (err) debug("error: %o", err);
                    if (err) return reject(err);
                    debug("got deployed code for %s", address);
                    accept(deployedBinary);
                  });
                }));

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function getDeployedCode(_x4) {
        return _ref4.apply(this, arguments);
      }

      return getDeployedCode;
    }()
  }]);
  return Web3Adapter;
}();

exports.default = Web3Adapter;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FINISHED = exports.ERROR = exports.ACTIVE = exports.WAITING = undefined;
exports.session = session;

var _redux = __webpack_require__(13);

var _reducers = __webpack_require__(65);

var _reducers2 = _interopRequireDefault(_reducers);

var _reducers3 = __webpack_require__(66);

var _reducers4 = _interopRequireDefault(_reducers3);

var _reducers5 = __webpack_require__(68);

var _reducers6 = _interopRequireDefault(_reducers5);

var _reducers7 = __webpack_require__(69);

var _reducers8 = _interopRequireDefault(_reducers7);

var _actions = __webpack_require__(24);

var actions = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WAITING = exports.WAITING = "WAITING";
var ACTIVE = exports.ACTIVE = "ACTIVE";
var ERROR = exports.ERROR = "ERROR";
var FINISHED = exports.FINISHED = "FINISHED";

function session() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : WAITING;
  var action = arguments[1];

  switch (action.type) {
    case actions.READY:
      return ACTIVE;

    case actions.ERROR:
      return { error: action.error };

    case actions.FINISH:
      return FINISHED;

    default:
      return state;
  }
}

var reduceState = (0, _redux.combineReducers)({
  session: session,
  data: _reducers2.default,
  evm: _reducers4.default,
  solidity: _reducers6.default,
  trace: _reducers8.default
});

exports.default = reduceState;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends4 = __webpack_require__(9);

var _extends5 = _interopRequireDefault(_extends4);

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _redux = __webpack_require__(13);

var _actions = __webpack_require__(32);

var actions = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:data:reducers");

var DEFAULT_SCOPES = {
  byId: {}
};

function scopes() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCOPES;
  var action = arguments[1];

  var context;
  var scope;
  var variables;

  switch (action.type) {
    case actions.SCOPE:
      scope = state.byId[action.id] || {};

      return {
        byId: (0, _extends5.default)({}, state.byId, (0, _defineProperty3.default)({}, action.id, (0, _extends5.default)({}, scope, {

          id: action.id,
          sourceId: action.sourceId,
          parentId: action.parentId,
          pointer: action.pointer
        })))
      };

    case actions.DECLARE:
      scope = state.byId[action.node.scope] || {};
      variables = scope.variables || [];

      return {
        byId: (0, _extends5.default)({}, state.byId, (0, _defineProperty3.default)({}, action.node.scope, (0, _extends5.default)({}, scope, {

          variables: [].concat((0, _toConsumableArray3.default)(variables), [{ name: action.node.name, id: action.node.id }])
        })))
      };

    default:
      return state;
  }
}

var info = (0, _redux.combineReducers)({
  scopes: scopes
});

var DEFAULT_ASSIGNMENTS = {
  byId: {}
};

function assignments() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ASSIGNMENTS;
  var action = arguments[1];

  switch (action.type) {
    case actions.ASSIGN:
      return {
        byId: (0, _extends5.default)({}, state.byId, _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(action.assignments).map(function (_ref) {
          var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
              id = _ref2[0],
              ref = _ref2[1];

          return (0, _defineProperty3.default)({}, id, (0, _extends5.default)({}, state.byId[id], {
            ref: ref
          }));
        })))))
      };

    default:
      return state;
  }
};

var proc = (0, _redux.combineReducers)({
  assignments: assignments
});

var reducer = (0, _redux.combineReducers)({
  info: info,
  proc: proc
});

exports.default = reducer;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = __webpack_require__(25);

var _set2 = _interopRequireDefault(_set);

var _from = __webpack_require__(67);

var _from2 = _interopRequireDefault(_from);

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends6 = __webpack_require__(9);

var _extends7 = _interopRequireDefault(_extends6);

exports.callstack = callstack;

var _redux = __webpack_require__(13);

var _actions = __webpack_require__(36);

var actions = _interopRequireWildcard(_actions);

var _helpers = __webpack_require__(6);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_CONTEXTS = {
  byContext: {},
  byBinary: {}
};

function contexts() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_CONTEXTS;
  var action = arguments[1];

  switch (action.type) {
    /*
     * Adding a new context
     */
    case actions.ADD_CONTEXT:
      var contractName = action.contractName,
          binary = action.binary;


      if (state.byBinary[binary]) {
        return state;
      }

      var context = (0, _helpers.keccak256)(binary);

      return {
        byContext: (0, _extends7.default)({}, state.byContext, (0, _defineProperty3.default)({}, context, { context: context, binary: binary, contractName: contractName })),

        byBinary: (0, _extends7.default)({}, state.byBinary, (0, _defineProperty3.default)({}, binary, { context: context }))
      };

    /*
     * Default case
     */
    default:
      return state;
  }
}

var DEFAULT_INSTANCES = {
  byAddress: {},
  byContext: {}
};

function instances() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_INSTANCES;
  var action = arguments[1];

  switch (action.type) {
    /*
     * Adding a new address for context
     */
    case actions.ADD_INSTANCE:
      var address = action.address,
          context = action.context,
          binary = action.binary;

      // get known addresses for this context

      var otherInstances = state.byContext[context] || [];
      var otherAddresses = otherInstances.map(function (_ref) {
        var address = _ref.address;
        return address;
      });

      return {
        byAddress: (0, _extends7.default)({}, state.byAddress, (0, _defineProperty3.default)({}, address, { context: context, binary: binary })),

        byContext: (0, _extends7.default)({}, state.byContext, (0, _defineProperty3.default)({}, context, (0, _from2.default)(new _set2.default(otherAddresses).add(address)).map(function (address) {
          return { address: address };
        })))
      };

    /*
     * Default case
     */
    default:
      return state;
  }
}

var info = (0, _redux.combineReducers)({
  contexts: contexts,
  instances: instances
});

function callstack() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var action = arguments[1];

  switch (action.type) {
    case actions.CALL:
      var address = action.address;
      return state.concat([{ address: address }]);

    case actions.CREATE:
      var binary = action.binary;
      return state.concat([{ binary: binary }]);

    case actions.RETURN:
      return state.slice(0, -1); // pop

    default:
      return state;
  };
}

var proc = (0, _redux.combineReducers)({
  callstack: callstack
});

var reducer = (0, _redux.combineReducers)({
  info: info,
  proc: proc
});

exports.default = reducer;

/***/ }),
/* 67 */
/***/ (function(module, exports) {

module.exports = require("babel-runtime/core-js/array/from");

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends4 = __webpack_require__(9);

var _extends5 = _interopRequireDefault(_extends4);

var _keys = __webpack_require__(23);

var _keys2 = _interopRequireDefault(_keys);

exports.functionDepth = functionDepth;

var _redux = __webpack_require__(13);

var _helpers = __webpack_require__(6);

var _actions = __webpack_require__(35);

var actions = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_SOURCES = {
  byId: {}
};

function sources() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SOURCES;
  var action = arguments[1];

  switch (action.type) {
    /*
     * Adding a new source
     */
    case actions.ADD_SOURCE:
      var ast = action.ast,
          source = action.source,
          sourcePath = action.sourcePath;


      var id = (0, _keys2.default)(state.byId).length;

      return {
        byId: (0, _extends5.default)({}, state.byId, (0, _defineProperty3.default)({}, id, {
          id: id,
          ast: ast,
          source: source,
          sourcePath: sourcePath
        }))

        /*
         * Default case
         */
      };default:
      return state;
  }
}

var DEFAULT_SOURCEMAPS = {
  byContext: {}
};

function sourceMaps() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SOURCEMAPS;
  var action = arguments[1];

  switch (action.type) {
    /*
     * Adding a new sourceMap
     */
    case actions.ADD_SOURCEMAP:
      var binary = action.binary,
          sourceMap = action.sourceMap;

      var context = (0, _helpers.keccak256)(binary);

      return {
        byContext: (0, _extends5.default)({}, state.byContext, (0, _defineProperty3.default)({}, context, {
          context: context,
          sourceMap: sourceMap
        }))
      };

    /*
     * Default Case
     */
    default:
      return state;
  }
}

var info = (0, _redux.combineReducers)({
  sources: sources,
  sourceMaps: sourceMaps
});

function functionDepth() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  var action = arguments[1];

  if (action.type === actions.JUMP) {
    var delta = spelunk(action.jumpDirection);
    return state + delta;
  } else {
    return state;
  }
}

function spelunk(jump) {
  if (jump == "i") {
    return 1;
  } else if (jump == "o") {
    return -1;
  } else {
    return 0;
  }
}

var proc = (0, _redux.combineReducers)({
  functionDepth: functionDepth
});

var reducer = (0, _redux.combineReducers)({
  info: info,
  proc: proc
});

exports.default = reducer;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.index = index;
exports.steps = steps;

var _redux = __webpack_require__(13);

var _actions = __webpack_require__(17);

var actions = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function index() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var action = arguments[1];

  if (action.type == actions.TOCK || action.type == actions.END_OF_TRACE) {
    return state + 1;
  } else {
    return state;
  }
}

function steps() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var action = arguments[1];

  if (action.type == actions.SAVE_STEPS) {
    return action.steps;
  } else {
    return state;
  }
}

var info = (0, _redux.combineReducers)({
  steps: steps
});

var proc = (0, _redux.combineReducers)({
  index: index
});

var reducer = (0, _redux.combineReducers)({
  info: info,
  proc: proc
});

exports.default = reducer;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(2);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _slicedToArray2 = __webpack_require__(3);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = __webpack_require__(5);

var _entries2 = _interopRequireDefault(_entries);

var _assign = __webpack_require__(7);

var _assign2 = _interopRequireDefault(_assign);

var _toConsumableArray2 = __webpack_require__(1);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _debug = __webpack_require__(0);

var _debug2 = _interopRequireDefault(_debug);

var _reselectTree = __webpack_require__(8);

var _selectors = __webpack_require__(11);

var _selectors2 = _interopRequireDefault(_selectors);

var _selectors3 = __webpack_require__(12);

var _selectors4 = _interopRequireDefault(_selectors3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = (0, _debug2.default)("debugger:session:selectors");

var session = (0, _reselectTree.createSelectorTree)({
  /**
   * session.info
   */
  info: {

    /**
     * session.info.affectedInstances
     */
    affectedInstances: (0, _reselectTree.createLeaf)([_selectors2.default.info.instances, _selectors2.default.info.contexts, _selectors4.default.info.sources, _selectors4.default.info.sourceMaps], function (instances, contexts, sources, sourceMaps) {
      return _assign2.default.apply(Object, [{}].concat((0, _toConsumableArray3.default)((0, _entries2.default)(instances).map(function (_ref) {
        var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
            address = _ref2[0],
            context = _ref2[1].context;

        var _contexts$context = contexts[context],
            contractName = _contexts$context.contractName,
            binary = _contexts$context.binary;
        var sourceMap = sourceMaps[context].sourceMap;

        var _ref3 = sourceMap ?
        // look for source ID between second and third colons (HACK)
        sources[sourceMap.match(/^[^:]+:[^:]+:([^:]+):/)[1]] : {},
            source = _ref3.source;

        return (0, _defineProperty3.default)({}, address, {
          contractName: contractName, source: source, binary: binary
        });
      }))));
    })
  }
});

exports.default = session;

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,